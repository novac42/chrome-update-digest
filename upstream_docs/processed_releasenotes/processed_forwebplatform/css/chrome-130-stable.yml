version: '130'
channel: stable
area: css
extraction_timestamp: '2025-08-17T21:27:00.929384'
extraction_method: deterministic
statistics:
  total_features: 4
  total_links: 11
  primary_tags:
    css: 4
  cross_cutting:
    privacy: 3
features:
- title: CSS Container Queries flat tree lookup
  content: 'The specification for container queries changed to look up flat tree ancestors. This change is only relevant for
    shadow DOM where an element will now be able to see non-named containers inside shadow trees into which the element or
    one of its ancestors are slotted, even if the CSS rule does not use `::part()` or `::slotted()`.


    [Tracking bug #340876720](https://issues.chromium.org/issues/340876720) | [ChromeStatus.com entry](https://chromestatus.com/feature/5242724333387776)
    | [Spec](https://drafts.csswg.org/css-conditional-5/#container-queries)'
  heading_path:
  - Chrome 130
  - CSS
  - CSS Container Queries flat tree lookup
  links:
  - url: https://issues.chromium.org/issues/340876720
    link_type: other
    title: 'Tracking bug #340876720'
  - url: https://chromestatus.com/feature/5242724333387776
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://drafts.csswg.org/css-conditional-5/#container-queries
    link_type: other
    title: Spec
  line_number: 21
  primary_tags:
  - name: css
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: 'CSS Nesting: The nested declarations rule'
  content: 'Keeps bare declarations following a nested rule in their place, by wrapping those declarations in `CSSNestedDeclarations`
    rules during parsing.


    [CSS nesting improves with CSSNestedDeclarations](https://web.dev/blog/css-nesting-cssnesteddeclarations) | [ChromeStatus.com
    entry](https://chromestatus.com/feature/5084403030818816)'
  heading_path:
  - Chrome 130
  - CSS
  - 'CSS Nesting: The nested declarations rule'
  links:
  - url: https://web.dev/blog/css-nesting-cssnesteddeclarations
    link_type: other
    title: CSS nesting improves with CSSNestedDeclarations
  - url: https://chromestatus.com/feature/5084403030818816
    link_type: chromestatus
    title: ChromeStatus.com entry
  line_number: 27
  primary_tags:
  - name: css
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns: []
- title: Full and unprefixed `box-decoration-break` support
  content: 'Adds support for `box-decoration-break: clone` both for inline fragmentation (line layout) and block fragmentation
    (pagination for printing and multicol).


    Previously in Chrome, only `box-decoration-break:slice` (the initial value) was supported for block fragmentation, whereas
    for inline fragmentation, `box-decoration-break:clone` was also supported, but only when using the prefixed `-webkit-box-decoration-break`
    property.


    [The box-decoration-break property in Chrome 130](/blog/box-decoration-break) | [Tracking bug #41295617](https://issues.chromium.org/issues/41295617)
    | [ChromeStatus.com entry](https://chromestatus.com/feature/5162398704205824) | [Spec](https://drafts.csswg.org/css-break/#break-decoration)'
  heading_path:
  - Chrome 130
  - CSS
  - Full and unprefixed `box-decoration-break` support
  links:
  - url: https://issues.chromium.org/issues/41295617
    link_type: other
    title: 'Tracking bug #41295617'
  - url: https://chromestatus.com/feature/5162398704205824
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://drafts.csswg.org/css-break/#break-decoration
    link_type: other
    title: Spec
  line_number: 33
  primary_tags:
  - name: css
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: Allow more pseudo-elements and pseudo-classes after `::part()`
  content: 'CSS selectors that use the `::part()` pseudo-element are allowed to have other CSS pseudo-elements (except `::part()`)
    and many types of other CSS pseudo-classes after them. Combinators are still not allowed after `::part()`, and pseudo-classes
    that depend on tree structure are not allowed.


    Previously Chrome only allowed a limited set of pseudo-classes and pseudo-elements after `::part()`. This change allows
    all of the pseudo-classes and pseudo-elements that should be allowed. It means selectors such as `::part(part-name):enabled`
    and `::part(part-name)::marker` are now allowed.


    [Tracking bug #40623497](https://issues.chromium.org/issues/40623497) | [ChromeStatus.com entry](https://chromestatus.com/feature/5195333643272192)
    | [Spec](https://drafts.csswg.org/css-shadow-parts-1/#part)'
  heading_path:
  - Chrome 130
  - CSS
  - Allow more pseudo-elements and pseudo-classes after `::part()`
  links:
  - url: https://issues.chromium.org/issues/40623497
    link_type: other
    title: 'Tracking bug #40623497'
  - url: https://chromestatus.com/feature/5195333643272192
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://drafts.csswg.org/css-shadow-parts-1/#part
    link_type: other
    title: Spec
  line_number: 41
  primary_tags:
  - name: css
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
