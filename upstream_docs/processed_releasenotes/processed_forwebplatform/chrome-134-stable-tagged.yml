version: '134'
channel: stable
extraction_timestamp: '2025-08-16T22:03:32.931141'
extraction_method: deterministic
statistics:
  total_features: 23
  total_links: 58
  primary_tags:
    css: 1
    pwa: 2
    performance: 4
    webapi: 7
    storage: 3
    devices: 1
    webgpu: 5
    deprecation: 2
    multimedia: 1
  cross_cutting:
    privacy: 14
    experimental: 3
    enterprise: 2
    ai: 1
    webgpu: 2
features:
- title: Customizable `<select>` Element
  content: 'Customizable `<select>` allows developers to take complete control of the rendering of `<select>` elements by
    adding the `appearance: base-select` CSS property and value.


    This feature relies on the `SelectParserRelaxation` flag, which changes the HTML parser to allow more tags within the
    `<select>` tag.


    [Tracking bug #40146374](https://issues.chromium.org/issues/40146374) | [ChromeStatus.com entry](https://chromestatus.com/feature/5737365999976448)
    | [Spec](https://github.com/whatwg/html/issues/9799)'
  heading_path:
  - Chrome 134
  - HTML and DOM
  - Customizable `<select>` Element
  links:
  - url: https://issues.chromium.org/issues/40146374
    link_type: other
    title: 'Tracking bug #40146374'
  - url: https://chromestatus.com/feature/5737365999976448
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://github.com/whatwg/html/issues/9799
    link_type: github
    title: Spec
  line_number: 21
  primary_tags: []
  cross_cutting_concerns:
  - privacy
- title: Select parser relaxation
  content: 'This change makes the HTML parser allow additional tags in `<select>` besides `<option>`, `<optgroup>`, and `<hr>`.


    This feature is gated by the temporary policy (`SelectParserRelaxationEnabled`). This is a temporary transition period,
    and the policy will stop working from Chrome 141.


    If you are experiencing problems that you believe are caused by this change, there''s a reverse origin trial to disable
    the parser relaxation.


    [Tracking bug #335456114](https://issues.chromium.org/issues/335456114) | [ChromeStatus.com entry](https://chromestatus.com/feature/5145948356083712)
    | [Spec](https://github.com/whatwg/html/pull/10557)'
  heading_path:
  - Chrome 134
  - HTML and DOM
  - Select parser relaxation
  links:
  - url: https://issues.chromium.org/issues/335456114
    link_type: other
    title: 'Tracking bug #335456114'
  - url: https://chromestatus.com/feature/5145948356083712
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://github.com/whatwg/html/pull/10557
    link_type: github
    title: Spec
  line_number: 29
  primary_tags: []
  cross_cutting_concerns:
  - privacy
  - experimental
  - enterprise
- title: Dialog light dismiss
  content: "One of the nice features of the Popover API is its light dismiss behavior. This behavior is now part of `<dialog>`,\
    \ with a new `closedby` attribute controlling the behavior:\n\n  * `<dialog closedby=\"none\">`: No user-triggered closing\
    \ of dialogs at all.\n  * `<dialog closedby=\"closerequest\">`: Pressing `Esc` (or other close trigger) closes the dialog\n\
    \  * `<dialog closedby=\"any\">`: Clicking outside the dialog, or pressing `Esc`, closes the dialog. Akin to `popover=\"\
    auto\"` behavior.\n\n[Tracking bug #376516550](https://issues.chromium.org/issues/376516550) | [ChromeStatus.com entry](https://chromestatus.com/feature/5097714453577728)\
    \ | [Spec](https://html.spec.whatwg.org/#attr-dialog-closedby)"
  heading_path:
  - Chrome 134
  - HTML and DOM
  - Dialog light dismiss
  links:
  - url: https://issues.chromium.org/issues/376516550
    link_type: other
    title: 'Tracking bug #376516550'
  - url: https://chromestatus.com/feature/5097714453577728
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://html.spec.whatwg.org/#attr-dialog-closedby
    link_type: spec
    title: Spec
  line_number: 39
  primary_tags: []
  cross_cutting_concerns:
  - privacy
- title: CSS highlight inheritance
  content: 'With CSS highlight inheritance, the CSS highlight pseudo-classes, such as `::selection` and `::highlight`, inherit
    their properties through the pseudo highlight chain, rather than the element chain. The result is a more intuitive model
    for inheritance of properties in highlights.


    [ChromeStatus.com entry](https://chromestatus.com/feature/5090853643354112) | [Spec](https://drafts.csswg.org/css-pseudo-4/#highlight-cascade)'
  heading_path:
  - Chrome 134
  - CSS
  - CSS highlight inheritance
  links:
  - url: https://chromestatus.com/feature/5090853643354112
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://drafts.csswg.org/css-pseudo-4/#highlight-cascade
    link_type: other
    title: Spec
  line_number: 51
  primary_tags:
  - name: css
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns: []
- title: Document subtitle (Fix PWA app titles)
  content: 'This feature allows to specify complementary information about the current window of an installed running PWA.
    It adds a subtitle to the page to provide contextual information that is displayed in the window''s title bar. This replaces
    the text contained in the HTML title element.


    [Tracking bug #1351682](https://issues.chromium.org/issues/1351682) | [ChromeStatus.com entry](https://chromestatus.com/feature/5168096826884096)
    | [Spec](https://github.com/whatwg/html/compare/main...diekus:html:main)'
  heading_path:
  - Chrome 134
  - PWA
  - Document subtitle (Fix PWA app titles)
  links:
  - url: https://issues.chromium.org/issues/1351682
    link_type: other
    title: 'Tracking bug #1351682'
  - url: https://chromestatus.com/feature/5168096826884096
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://github.com/whatwg/html/compare/main...diekus:html:main
    link_type: github
    title: Spec
  line_number: 59
  primary_tags:
  - name: pwa
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: User link capturing on PWAs
  content: 'Web links automatically direct users to installed web apps. To better align with users'' expectations around installed
    experiences, Chrome makes it easier to move between the browser and installed web apps. When the user clicks a link that
    could be handled by an installed web app, the link will open in that installed web app. Users can change this behavior
    through the installed web app''s settings. Developers can control this behavior with the [`launch_handler`](/docs/web-platform/launch-handler)
    manifest property, and can reference this [developer documentation](https://docs.google.com/document/d/e/2PACX-1vSqYzAmiLr-58OgSWBITtAAu6_2XUpjjNEdMvc6IdZn9DjQCeVrE0SKViumyly0cpryxAONMq62zwHw/pub)
    for more information about how deep linking works with installed web apps.


    [ChromeStatus.com entry](https://chromestatus.com/feature/5194343954776064)'
  heading_path:
  - Chrome 134
  - PWA
  - User link capturing on PWAs
  links:
  - url: https://docs.google.com/document/d/e/2PACX-1vSqYzAmiLr-58OgSWBITtAAu6_2XUpjjNEdMvc6IdZn9DjQCeVrE0SKViumyly0cpryxAONMq62zwHw/pub
    link_type: other
    title: developer documentation
  - url: https://chromestatus.com/feature/5194343954776064
    link_type: chromestatus
    title: ChromeStatus.com entry
  line_number: 65
  primary_tags:
  - name: pwa
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns: []
- title: 'Document-Policy: `expect-no-linked-resources`'
  content: "The `expect-no-linked-resources` configuration point in Document Policy allows a document to hint to the user\
    \ agent to better optimize its loading sequence, such as not using the default speculative parsing behavior.\n\nUser Agents\
    \ have implemented speculative parsing of HTML to speculatively fetch resources that are present in the HTML markup, to\
    \ speed up page loading. For the vast majority of pages on the Web that have resources declared in the HTML markup, the\
    \ optimization is beneficial and the cost paid in determining such resources is a sound tradeoff. However, the following\
    \ scenarios might result in a sub-optimal performance tradeoff versus the explicit time spent parsing HTML for determining\
    \ sub resources to fetch:\n\n  * Pages that don't have any resources declared in the HTML.\n  * Large HTML pages with\
    \ minimal or no resource loads that could explicitly control preloading resources using other preload mechanisms available.\n\
    \nThe `expect-no-linked-resources` Document-Policy hints the User Agent that it may choose to optimize out the time spent\
    \ in such sub resource determination.\n\n[Tracking bug #365632977](https://issues.chromium.org/issues/365632977) | [ChromeStatus.com\
    \ entry](https://chromestatus.com/feature/5202800863346688) | [Spec](https://github.com/whatwg/html/pull/10718)"
  heading_path:
  - Chrome 134
  - Performance
  - 'Document-Policy: `expect-no-linked-resources`'
  links:
  - url: https://issues.chromium.org/issues/365632977
    link_type: other
    title: 'Tracking bug #365632977'
  - url: https://chromestatus.com/feature/5202800863346688
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://github.com/whatwg/html/pull/10718
    link_type: github
    title: Spec
  line_number: 73
  primary_tags:
  - name: performance
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
  - enterprise
- title: Explicit resource management (async)
  content: 'These features address a common pattern in software development regarding the lifetime and management of various
    resources (for example memory and I/O). This pattern generally includes the allocation of a resource and the ability to
    explicitly release critical resources.


    [Tracking bug #42203814](https://issues.chromium.org/issues/42203814) | [ChromeStatus.com entry](https://chromestatus.com/feature/5087324181102592)
    | [Spec](https://tc39.es/proposal-explicit-resource-management)'
  heading_path:
  - Chrome 134
  - Performance
  - Explicit resource management (async)
  links:
  - url: https://issues.chromium.org/issues/42203814
    link_type: other
    title: 'Tracking bug #42203814'
  - url: https://chromestatus.com/feature/5087324181102592
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://tc39.es/proposal-explicit-resource-management
    link_type: other
    title: Spec
  line_number: 86
  primary_tags:
  - name: performance
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: Explicit resource management (sync)
  content: 'These features address a common pattern in software development regarding the lifetime and management of various
    resources (for example memory and I/O). This pattern generally includes the allocation of a resource and the ability to
    explicitly release critical resources.


    [Tracking bug #42203506](https://issues.chromium.org/issues/42203506) | [ChromeStatus.com entry](https://chromestatus.com/feature/5071680358842368)
    | [Spec](https://tc39.es/proposal-explicit-resource-management)'
  heading_path:
  - Chrome 134
  - Performance
  - Explicit resource management (sync)
  links:
  - url: https://issues.chromium.org/issues/42203506
    link_type: other
    title: 'Tracking bug #42203506'
  - url: https://chromestatus.com/feature/5071680358842368
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://tc39.es/proposal-explicit-resource-management
    link_type: other
    title: Spec
  line_number: 92
  primary_tags:
  - name: performance
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: Extend the `console.timeStamp` API to support measurements and presentation options
  content: 'Extends the `console.timeStamp()` API, in a backwards-compatible manner, to provide a high-performance method
    for instrumenting applications and surfacing timing data to the Performance panel in DevTools.


    Timing entries added with the API can have a custom timestamp, duration and presentation options (track, swimlane, and
    color).


    [ChromeStatus.com entry](https://chromestatus.com/feature/5133241999425536) | [Spec](https://docs.google.com/document/d/1juT7esZ62ydio-SQwEVsY7pdidKhjAphvUghWrlw0II/edit?tab=t.0#heading=h.ekp1q3o1v7v3)'
  heading_path:
  - Chrome 134
  - Performance
  - Extend the `console.timeStamp` API to support measurements and presentation options
  links:
  - url: https://chromestatus.com/feature/5133241999425536
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://docs.google.com/document/d/1juT7esZ62ydio-SQwEVsY7pdidKhjAphvUghWrlw0II/edit?tab=t.0#heading=h.ekp1q3o1v7v3
    link_type: other
    title: Spec
  line_number: 98
  primary_tags:
  - name: performance
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns: []
- title: Allow reading interest groups in Shared Storage Worklet
  content: 'Adds an `interestGroups()` method to the shared storage worklet, to return the Protected Audience interest groups
    associated with the shared storage origin''s owner, with some additional metadata.


    This API provides the Protected Audience buyer with a better picture of what''s happening with their users, allowing for
    Private Aggregation reports.


    [ChromeStatus.com entry](https://chromestatus.com/feature/5074536530444288)'
  heading_path:
  - Chrome 134
  - Web APIs
  - Allow reading interest groups in Shared Storage Worklet
  links:
  - url: https://chromestatus.com/feature/5074536530444288
    link_type: chromestatus
    title: ChromeStatus.com entry
  line_number: 108
  primary_tags:
  - name: webapi
    priority: primary
    source: heading
    confidence: 1.0
  - name: storage
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns: []
- title: 'Attribution reporting Feature: Remove aggregatable report limit when trigger context ID is non-null'
  content: 'This change is based on API caller feedback and the need for being able to measure a higher number of conversion
    events for certain user flows.


    Currently the API has a limit that allows up to 20 aggregatable reports to be generated per source registration which
    is restrictive for use cases where a user may have a longer user journey. This change removes the aggregatable report
    limit when a trigger context ID is provided as part of the registration. The removal of this limit is restricted to only
    when the trigger context ID is specified, because when it is specified the API applies a higher rate of null reports which
    helps to protect against cross-site information leaking through report counts.


    Additionally, aggregatable reports will still be bound by other limits that restrict the total amount of information that
    can be measured, such as the L1 contribution budget (65,536) per source and the attribution rate limit.


    [ChromeStatus.com entry](https://chromestatus.com/feature/5079048977645568)'
  heading_path:
  - Chrome 134
  - Web APIs
  - 'Attribution reporting Feature: Remove aggregatable report limit when trigger context ID is non-null'
  links:
  - url: https://chromestatus.com/feature/5079048977645568
    link_type: chromestatus
    title: ChromeStatus.com entry
  line_number: 116
  primary_tags:
  - name: webapi
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns: []
- title: Bounce tracking mitigations on HTTP Cache
  content: 'Bounce tracking mitigations for the HTTP cache is an extension to existing anti-bounce-tracking behavior. It removes
    the requirement that a suspected tracking site must have performed storage access in order to activate bounce tracking
    mitigations.


    Chrome''s initially proposed bounce tracking mitigation solution triggers when a site accesses browser storage (for example,
    in cookies) during a redirect flow. However, bounce trackers can systematically circumvent such mitigations by using the
    HTTP cache to preserve data. By relaxing the triggering conditions for bounce tracking mitigations, the browser should
    be able to catch bounce trackers using the HTTP cache.


    [Tracking bug #40264244](https://issues.chromium.org/issues/40264244) | [ChromeStatus.com entry](https://chromestatus.com/feature/6299570819301376)
    | [Spec](https://privacycg.github.io/nav-tracking-mitigations/#bounce-tracking-mitigations)'
  heading_path:
  - Chrome 134
  - Web APIs
  - Bounce tracking mitigations on HTTP Cache
  links:
  - url: https://issues.chromium.org/issues/40264244
    link_type: other
    title: 'Tracking bug #40264244'
  - url: https://chromestatus.com/feature/6299570819301376
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://privacycg.github.io/nav-tracking-mitigations/#bounce-tracking-mitigations
    link_type: github
    title: Spec
  line_number: 126
  primary_tags:
  - name: webapi
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: LLM-powered on-device detection of abusive notifications on Android
  content: 'This launch aims to hide the contents of notifications that are suspected to be abusive. The user will then have
    the options to dismiss, show the notification, or unsubscribe from the origin. This detection is to be done by an on-device
    model.


    [ChromeStatus.com entry](https://chromestatus.com/feature/5303216063119360)'
  heading_path:
  - Chrome 134
  - Web APIs
  - LLM-powered on-device detection of abusive notifications on Android
  links:
  - url: https://chromestatus.com/feature/5303216063119360
    link_type: chromestatus
    title: ChromeStatus.com entry
  line_number: 134
  primary_tags:
  - name: webapi
    priority: primary
    source: heading
    confidence: 1.0
  - name: devices
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - ai
- title: '`OffscreenCanvas` `getContextAttributes`'
  content: 'Add the `getContextAttributes` interface from `CanvasRenderingContext2D` to `OffscreenCanvasRenderingContext2D`.


    [Tracking bug #388437261](https://issues.chromium.org/issues/388437261) | [ChromeStatus.com entry](https://chromestatus.com/feature/5508068999430144)
    | [Spec](https://github.com/whatwg/html/pull/10904)'
  heading_path:
  - Chrome 134
  - Web APIs
  - '`OffscreenCanvas` `getContextAttributes`'
  links:
  - url: https://issues.chromium.org/issues/388437261
    link_type: other
    title: 'Tracking bug #388437261'
  - url: https://chromestatus.com/feature/5508068999430144
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://github.com/whatwg/html/pull/10904
    link_type: github
    title: Spec
  line_number: 140
  primary_tags:
  - name: webapi
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: 'Private Aggregation API: per-context contribution limits for Shared Storage callers'
  content: 'Enables Shared Storage callers to customize the number of contributions per Private Aggregation report.


    This feature enables Shared Storage callers to configure per-context contribution limits with a new field, `maxContributions`.
    Callers set this field to override the default number of contributions per report—larger and smaller numbers will both
    be permitted. Chrome will accept values of `maxContributions` between 1 and 1000 inclusive; larger values will be interpreted
    as 1000.


    Due to padding, the size of each report''s payload will be roughly proportional to the chosen number of contributions
    per report. We expect that opting into larger reports will increase the cost of operating the Aggregation Service.


    Protected Audience callers won''t be affected by this feature. However, we are planning to add support for customizing
    the number of contributions for Protected Audience reports in future features.


    [Tracking bug #376707230](https://issues.chromium.org/issues/376707230) | [ChromeStatus.com entry](https://chromestatus.com/feature/5189366316793856)
    | [Spec](https://github.com/patcg-individual-drafts/private-aggregation-api/pull/164/files)'
  heading_path:
  - Chrome 134
  - Web APIs
  - 'Private Aggregation API: per-context contribution limits for Shared Storage callers'
  links:
  - url: https://issues.chromium.org/issues/376707230
    link_type: other
    title: 'Tracking bug #376707230'
  - url: https://chromestatus.com/feature/5189366316793856
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://github.com/patcg-individual-drafts/private-aggregation-api/pull/164/files
    link_type: github
    title: Spec
  line_number: 146
  primary_tags:
  - name: webapi
    priority: primary
    source: heading
    confidence: 1.0
  - name: storage
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: Support Web Locks API in Shared Storage
  content: "Integrates the Web Locks API into Shared Storage. This prevents scenarios such as where cross-site reach measurement\
    \ can result in duplicate reporting, due to the potential race conditions within the `get()` and `set()` logic.\n\nThis\
    \ change:\n\n  * Introduces `navigator.locks.request` to the worklet environment.\n  * Introduces `{ withLock: <resource>}`\
    \ option to all modifier methods.\n  * Introduces a batch modify method: `sharedStorage.batchUpdate(methods, options)`.\
    \ This method, with the `withLock` option, allows multiple modifier methods to be executed atomically, enabling use cases\
    \ where a website needs to maintain consistency while updating data organized across multiple keys.\n\n[Tracking bug #373899210](https://issues.chromium.org/issues/373899210)\
    \ | [ChromeStatus.com entry](https://chromestatus.com/feature/5133950203461632)"
  heading_path:
  - Chrome 134
  - Web APIs
  - Support Web Locks API in Shared Storage
  links:
  - url: https://issues.chromium.org/issues/373899210
    link_type: other
    title: 'Tracking bug #373899210'
  - url: https://chromestatus.com/feature/5133950203461632
    link_type: chromestatus
    title: ChromeStatus.com entry
  line_number: 158
  primary_tags:
  - name: webapi
    priority: primary
    source: heading
    confidence: 1.0
  - name: storage
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: Support `ImageSmoothingQuality` in `PaintCanvas`
  content: 'Add support for the `imageSmoothingQuality` attribute on Paint Canvas. This lets you choose the quality or performance
    tradeoff when scaling images. There are three options in total for `imageSmoothingQuality`: `low`, `medium` and `high`.


    [Tracking bug #None](https://issues.chromium.org/issues/None) | [ChromeStatus.com entry](https://chromestatus.com/feature/4666019443113984)
    | [Spec](https://drafts.css-houdini.org/css-paint-api-1/#paintrenderingcontext2d)'
  heading_path:
  - Chrome 134
  - Rendering and graphics
  - Support `ImageSmoothingQuality` in `PaintCanvas`
  links:
  - url: https://issues.chromium.org/issues/None
    link_type: other
    title: 'Tracking bug #None'
  - url: https://chromestatus.com/feature/4666019443113984
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://drafts.css-houdini.org/css-paint-api-1/#paintrenderingcontext2d
    link_type: other
    title: Spec
  line_number: 175
  primary_tags: []
  cross_cutting_concerns:
  - privacy
- title: WebGPU subgroups
  content: 'Adds subgroup functionality to WebGPU. Subgroup operations perform SIMT operations to provide efficient communication
    and data sharing among groups of invocations. These operations can be used to accelerate applications by reducing memory
    overheads incurred by inter-invocation communication.


    [ChromeStatus.com entry](https://chromestatus.com/feature/5126409856221184) | [Spec](https://github.com/gpuweb/gpuweb/pull/4963)'
  heading_path:
  - Chrome 134
  - Rendering and graphics
  - WebGPU subgroups
  links:
  - url: https://chromestatus.com/feature/5126409856221184
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://github.com/gpuweb/gpuweb/pull/4963
    link_type: github
    title: Spec
  line_number: 181
  primary_tags:
  - name: webgpu
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - webgpu
- title: Detailed WebGPU Updates
  content: "Source: https://developer.chrome.com/blog/new-in-webgpu-134\n\n  * [ Chrome for Developers ](https://developer.chrome.com/)\n\
    \  * [ Blog ](https://developer.chrome.com/blog)"
  heading_path:
  - Chrome 134
  - Rendering and graphics
  - Detailed WebGPU Updates
  links:
  - url: https://developer.chrome.com/
    link_type: other
    title: Chrome for Developers
  - url: https://developer.chrome.com/blog
    link_type: other
    title: Blog
  line_number: 188
  primary_tags:
  - name: webgpu
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - webgpu
- title: Digital Credential API
  content: 'Websites can and do get credentials from mobile wallet apps through a variety of mechanisms today, for example,
    custom URL handlers and QR code scanning. This feature lets sites request identity information from wallets using Android''s
    `IdentityCredential` `CredMan` system. It is extensible to support multiple credential formats (for example, ISO mDoc
    and W3C verifiable credential) and allows multiple wallet apps to be used. Mechanisms are being added to help reduce the
    risk of ecosystem-scale abuse of real-world identity.


    The origin trial starting in Chrome 134 adds support for this API on desktop platform, where Chrome on Desktop will securely
    communicate with the digital wallet on the Android phone to fetch the requested credentials.


    [Origin Trial](/origintrials#/view_trial/3139571890230657025) | [Tracking bug #40257092](https://issues.chromium.org/issues/40257092)
    | [ChromeStatus.com entry](https://chromestatus.com/feature/5166035265650688) | [Spec](https://wicg.github.io/digital-credentials)'
  heading_path:
  - What's New in WebGPU (Chrome 134)
  - Origin trials
  - Digital Credential API
  links:
  - url: https://issues.chromium.org/issues/40257092
    link_type: other
    title: 'Tracking bug #40257092'
  - url: https://chromestatus.com/feature/5166035265650688
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://wicg.github.io/digital-credentials
    link_type: spec
    title: Spec
  line_number: 252
  primary_tags:
  - name: webgpu
    priority: secondary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
  - experimental
- title: Deprecation trial for `SelectParserRelaxation`
  content: 'This is a deprecation trial, which re-enables the old parser behavior for parsing `<select>` tags. Under that
    old behavior, non-supported content is silently discarded and not included in the DOM content underneath the `<select>`.
    This trial can be used in case the new behavior enabled from Chrome 135 breaks a site.


    [Origin Trial](/origintrials#/view_trial/182958734861926401) | [ChromeStatus.com entry](https://chromestatus.com/feature/5145948356083712)'
  heading_path:
  - What's New in WebGPU (Chrome 134)
  - Origin trials
  - Deprecation trial for `SelectParserRelaxation`
  links:
  - url: https://chromestatus.com/feature/5145948356083712
    link_type: chromestatus
    title: ChromeStatus.com entry
  line_number: 260
  primary_tags:
  - name: webgpu
    priority: secondary
    source: heading
    confidence: 1.0
  - name: deprecation
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - experimental
- title: Remove nonstandard `getUserMedia` audio constraints
  content: 'Blink supports a number of nonstandard `goog`-prefixed constraints for `getUserMedia` from some time before constraints
    were properly standardized.


    Usage has gone down significantly to between 0.000001% to 0.0009% (depending on the constraint) and some of them don''t
    even have an effect due to changes in the Chromium audio-capture stack. Soon none of them will have any effect due to
    other upcoming changes.


    We don''t expect any major regressions due to this change. Applications using these constraints will continue to work,
    but will get audio with default settings (as if no constraints were passed). They can opt to migrate to standard constraints.


    [Tracking bug #377131184](https://issues.chromium.org/issues/377131184) | [ChromeStatus.com entry](https://chromestatus.com/feature/5097536380207104)
    | [Spec](https://w3c.github.io/mediacapture-main/#media-track-constraints)


    Except as otherwise noted, the content of this page is licensed under the [Creative Commons Attribution 4.0 License](https://creativecommons.org/licenses/by/4.0/),
    and code samples are licensed under the [Apache 2.0 License](https://www.apache.org/licenses/LICENSE-2.0). For details,
    see the [Google Developers Site Policies](https://developers.google.com/site-policies). Java is a registered trademark
    of Oracle and/or its affiliates.


    Last updated 2025-03-04 UTC.


    [[["Easy to understand","easyToUnderstand","thumb-up"],["Solved my problem","solvedMyProblem","thumb-up"],["Other","otherUp","thumb-up"]],[["Missing
    the information I need","missingTheInformationINeed","thumb-down"],["Too complicated / too many steps","tooComplicatedTooManySteps","thumb-down"],["Out
    of date","outOfDate","thumb-down"],["Samples / code issue","samplesCodeIssue","thumb-down"],["Other","otherDown","thumb-down"]],["Last
    updated 2025-03-04 UTC."],[],[]]'
  heading_path:
  - What's New in WebGPU (Chrome 134)
  - Deprecations and removals
  - Remove nonstandard `getUserMedia` audio constraints
  links:
  - url: https://issues.chromium.org/issues/377131184
    link_type: other
    title: 'Tracking bug #377131184'
  - url: https://chromestatus.com/feature/5097536380207104
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://w3c.github.io/mediacapture-main/#media-track-constraints
    link_type: spec
    title: Spec
  - url: https://creativecommons.org/licenses/by/4.0/
    link_type: other
    title: Creative Commons Attribution 4.0 License
  - url: https://www.apache.org/licenses/LICENSE-2.0
    link_type: other
    title: Apache 2.0 License
  - url: https://developers.google.com/site-policies
    link_type: other
    title: Google Developers Site Policies
  line_number: 268
  primary_tags:
  - name: webgpu
    priority: secondary
    source: heading
    confidence: 1.0
  - name: deprecation
    priority: primary
    source: heading
    confidence: 1.0
  - name: multimedia
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
