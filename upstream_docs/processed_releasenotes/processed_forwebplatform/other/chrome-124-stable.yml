version: '124'
channel: stable
area: other
extraction_timestamp: '2025-08-13T15:23:00.315369'
extraction_method: deterministic
statistics:
  total_features: 6
  total_links: 16
  primary_tags:
    network: 1
    multimedia: 1
  cross_cutting:
    privacy: 4
    security: 1
    enterprise: 1
features:
- title: Sec-CH-UA-Form-Factors client hint
  content: "This hint gives a server information about the user agent's form-factors. It returns one or more of the following\
    \ form-factor values:\n\n  * **Desktop** : A user-agent running on a personal computer.\n  * **Automotive** : A user-agent\
    \ embedded in a vehicle, where the user may be responsible for operating the vehicle and unable to attend to small details.\n\
    \  * **Mobile** : Small, touch-oriented device typically carried on a user's person.\n  * **Tablet** : A touch-oriented\
    \ device larger than \"Mobile\" and not typically carried on a user's person.\n  * **XR** : Immersive devices that augment\
    \ or replace the environment around the user.\n  * **EInk** : A device characterized by slow screen updates and limited\
    \ or no color resolution.\n  * **Watch** : A mobile device with a tiny screen (typically less than two inches), carried\
    \ in such a way that the user can glance at it quickly.\n\n[ChromeStatus.com entry](https://chromestatus.com/feature/5162545698045952)\
    \ | [Spec](https://wicg.github.io/ua-client-hints/#sec-ch-ua-form-factor)"
  heading_path:
  - Chrome 124
  - Loading
  - Sec-CH-UA-Form-Factors client hint
  links:
  - url: https://chromestatus.com/feature/5162545698045952
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://wicg.github.io/ua-client-hints/#sec-ch-ua-form-factor
    link_type: spec
    title: Spec
  line_number: 53
  primary_tags: []
  cross_cutting_concerns:
  - privacy
- title: Private Network Access permission to relax mixed content
  content: 'To establish connections to devices on a local network that don''t have globally unique names, and therefore cannot
    obtain TLS certificates, this feature introduces a new option to `fetch()` to declare a developers'' intent to talk to
    such a device. This includes a new policy-controlled feature to gate each site''s access to this capability, and new headers
    for the server''s preflight response to provide additional metadata.


    [ChromeStatus.com entry](https://chromestatus.com/feature/5954091755241472) | [Spec](https://wicg.github.io/private-network-access)'
  heading_path:
  - Chrome 124
  - Loading
  - Private Network Access permission to relax mixed content
  links:
  - url: https://chromestatus.com/feature/5954091755241472
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://wicg.github.io/private-network-access
    link_type: spec
    title: Spec
  line_number: 67
  primary_tags:
  - name: network
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - security
  - enterprise
- title: '`priority` HTTP request header'
  content: 'This adds the `priority` request header for all HTTP requests with the priority information for the request at
    the time that it was sent.


    RFC 9218 (Extensible Prioritization Scheme for HTTP) defines a `priority` HTTP request header to use for signaling request
    priority to origins (and intermediaries). It also defines negotiation processes and protocol-level frames for HTTP/2 and
    HTTP/3 to carry the same priority information.


    The header can only signal the initial priority for a resource when it was first requested while the frame-based mechanisms
    allow for modifying the priority after the fact.


    The header can operate end-to-end to the origin servers (and provide a mechanism for the origin to override the priority
    if recognized by intermediaries) while the frames are limited to operating on a link level.


    This feature is specifically for supporting the header-based prioritization scheme.


    [Tracking bug #40252001](https://issues.chromium.org/issues/40252001) | [ChromeStatus.com entry](https://chromestatus.com/feature/5109106573049856)
    | [Spec](https://datatracker.ietf.org/doc/rfc9218)'
  heading_path:
  - Chrome 124
  - Loading
  - '`priority` HTTP request header'
  links:
  - url: https://issues.chromium.org/issues/40252001
    link_type: other
    title: 'Tracking bug #40252001'
  - url: https://chromestatus.com/feature/5109106573049856
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://datatracker.ietf.org/doc/rfc9218
    link_type: other
    title: Spec
  line_number: 73
  primary_tags: []
  cross_cutting_concerns:
  - privacy
- title: Document render-blocking
  content: 'This feature enables authors to block rendering of a document until the critical content has been parsed, ensuring
    a consistent first paint across all browsers. Without this feature, the first paint''s state depends on the heuristics
    for parser yielding which can vary across browsers.


    This is particularly important for View Transitions where the parsed DOM state on the first frame can drastically change
    the transition created.


    Note that this feature implements a `<link rel=expect href="#id">` syntax that allows a link element to reference another
    expected element on the page. The rendering is then blocked until the expected element is fully parsed. This supersedes
    the previous implementation of an HTML attribute that allows the whole document to be render-blocked.


    [ChromeStatus.com entry](https://chromestatus.com/feature/5113053598711808) | [Spec](https://html.spec.whatwg.org/multipage/links.html#link-type-expect)'
  heading_path:
  - Chrome 124
  - Loading
  - Document render-blocking
  links:
  - url: https://chromestatus.com/feature/5113053598711808
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://html.spec.whatwg.org/multipage/links.html#link-type-expect
    link_type: spec
    title: Spec
  line_number: 87
  primary_tags: []
  cross_cutting_concerns: []
- title: X25519Kyber768 key encapsulation for TLS
  content: 'Protects current Chrome TLS traffic against future quantum cryptanalysis by deploying the Kyber768 quantum-resistant
    key agreement algorithm.


    This is a hybrid X25519 and Kyber768 key agreement based on an IETF standard. This specification and launch is outside
    the scope of W3C. This key agreement will be launched as a TLS cipher, and should be transparent to users.


    [Protecting Chrome Traffic with Hybrid Kyber KEM](https://blog.chromium.org/2023/08/protecting-chrome-traffic-with-hybrid.html)
    | [Tracking bug #40910498](https://issues.chromium.org/issues/40910498) | [ChromeStatus.com entry](https://chromestatus.com/feature/5257822742249472)
    | [Spec](https://www.ietf.org/archive/id/draft-tls-westerbaan-xyber768d00-02.html)'
  heading_path:
  - Chrome 124
  - Loading
  - X25519Kyber768 key encapsulation for TLS
  links:
  - url: https://blog.chromium.org/2023/08/protecting-chrome-traffic-with-hybrid.html
    link_type: other
    title: Protecting Chrome Traffic with Hybrid Kyber KEM
  - url: https://issues.chromium.org/issues/40910498
    link_type: other
    title: 'Tracking bug #40910498'
  - url: https://chromestatus.com/feature/5257822742249472
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://www.ietf.org/archive/id/draft-tls-westerbaan-xyber768d00-02.html
    link_type: other
    title: Spec
  line_number: 97
  primary_tags: []
  cross_cutting_concerns:
  - privacy
- title: '`jitterBufferTarget` attribute'
  content: 'The `jitterBufferTarget` attribute allows applications to specify a target duration of time in milliseconds of
    media for the `RTCRtpReceiver` jitter buffer to hold. This influences the amount of buffering done by the user agent,
    which in turn affects retransmissions and packet loss recovery. Altering the target value allows applications to control
    the tradeoff between playout delay and the risk of running out of audio or video frames due to network jitter.


    [Tracking bug #324276557](https://issues.chromium.org/issues/324276557) | [ChromeStatus.com entry](https://chromestatus.com/feature/5930772496384000)
    | [Spec](https://w3c.github.io/webrtc-extensions/#dom-rtcrtpreceiver-jitterbuffertarget)'
  heading_path:
  - Chrome 124
  - Media
  - '`jitterBufferTarget` attribute'
  links:
  - url: https://issues.chromium.org/issues/324276557
    link_type: other
    title: 'Tracking bug #324276557'
  - url: https://chromestatus.com/feature/5930772496384000
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://w3c.github.io/webrtc-extensions/#dom-rtcrtpreceiver-jitterbuffertarget
    link_type: spec
    title: Spec
  line_number: 107
  primary_tags:
  - name: multimedia
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
