version: '126'
channel: stable
area: other
extraction_timestamp: '2025-08-17T21:27:00.564658'
extraction_method: deterministic
statistics:
  total_features: 4
  total_links: 9
  primary_tags:
    multimedia: 2
    privacy: 1
    accessibility: 1
  cross_cutting:
    privacy: 1
features:
- title: MP4 container support for MediaRecorder
  content: 'Adds support for muxing audio and video into MP4 containers with MediaRecorder.


    [MediaRecorder](https://developer.mozilla.org/docs/Web/API/MediaRecorder) | [ChromeStatus.com entry](https://chromestatus.com/feature/5163469011943424)
    | [Spec](https://www.w3.org/TR/mediastream-recording/)'
  heading_path:
  - Chrome 126
  - Media
  - MP4 container support for MediaRecorder
  links:
  - url: https://developer.mozilla.org/docs/Web/API/MediaRecorder
    link_type: mdn
    title: MediaRecorder
  - url: https://chromestatus.com/feature/5163469011943424
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://www.w3.org/TR/mediastream-recording/
    link_type: spec
    title: Spec
  line_number: 85
  primary_tags:
  - name: multimedia
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns: []
- title: OpusEncoderConfig `signal` and `application` parameters
  content: 'The `OpusEncoderConfig.signal` and `OpusEncoderConfig.application` parameters are mapped directly to implementation
    specific encoder knobs. These allow web authors to provide hints as to what type of data is being encoded, and in which
    context the data is being used.


    `signal` can be one of `"auto"`, `"music"`, `"voice"`. It configures the encoder for the best performance in encoding
    the specified type of data. `application` can be one of `"voip"`, `"audio"`, `"lowdelay"`. It configures the encoder to
    favor speech intelligibility, faithful reproduction of the original input, or minimal latency.


    [ChromeStatus.com entry](https://chromestatus.com/feature/5165257615212544) | [Spec](https://w3c.github.io/webcodecs/opus_codec_registration.html#dom-opusencoderconfig-signal)'
  heading_path:
  - Chrome 126
  - Media
  - OpusEncoderConfig `signal` and `application` parameters
  links:
  - url: https://chromestatus.com/feature/5165257615212544
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://w3c.github.io/webcodecs/opus_codec_registration.html#dom-opusencoderconfig-signal
    link_type: spec
    title: Spec
  line_number: 91
  primary_tags:
  - name: multimedia
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns: []
- title: Align navigator.cookieEnabled with spec
  content: '`navigator.cookieEnabled` currently indicates if "the user agent attempts to handle cookies" in a given context.
    A change in Chrome, shipping as part of third-party cookie deprecation (3PCD), would cause it to indicate whether unpartitioned
    cookie access is possible (causing it to return false in most cross-site iframes). We should restore the prior behavior
    of `navigator.cookieEnabled` which indicated only if cookies were enabled or disabled for the site and rely on the cross-vendor
    function `document.hasStorageAccess` to indicate if unpartitioned cookie access is possible.


    [Tracking bug #335553590](https://issues.chromium.org/issues/335553590) | [ChromeStatus.com entry](https://chromestatus.com/feature/6227655153418240)
    | [Spec](https://html.spec.whatwg.org/multipage/system-state.html#cookies)'
  heading_path:
  - Chrome 126
  - Privacy
  - Align navigator.cookieEnabled with spec
  links:
  - url: https://issues.chromium.org/issues/335553590
    link_type: other
    title: 'Tracking bug #335553590'
  - url: https://chromestatus.com/feature/6227655153418240
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://html.spec.whatwg.org/multipage/system-state.html#cookies
    link_type: spec
    title: Spec
  line_number: 111
  primary_tags:
  - name: privacy
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: Support for the UI Automation Accessibility Framework on Windows
  content: 'Modern assistive applications on Microsoft Windows use the platform''s UI Automation accessibility framework to
    interoperate with other applications'' user interfaces. Until now, Chromium has supported the older Microsoft Active Accessibility
    (MSAA) and IAccessible2 (IA2) framework for this purpose, which has led to problems with accessibility tools on Windows.


    To solve this problem, Microsoft has worked with the Chrome team to support the UI Automation (UIA) framework on Windows
    directly, making it easier for accessibility tools to communicate with the browser. We''ll be starting a gradual rollout
    to stable, starting in Chrome version 126. This will enable Voice Access to function in all Chromium-based browsers and
    will enhance the user experience for all UIA-based accessibility tools, such as Narrator and Magnifier.


    [Introducing UIA support on Windows](https://developer.chrome.com/blog/windows-uia-support)'
  heading_path:
  - Chrome 126
  - Accessibility
  - Support for the UI Automation Accessibility Framework on Windows
  links:
  - url: https://developer.chrome.com/blog/windows-uia-support
    link_type: other
    title: Introducing UIA support on Windows
  line_number: 119
  primary_tags:
  - name: accessibility
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns: []
