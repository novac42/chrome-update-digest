version: '137'
channel: stable
extraction_timestamp: '2025-08-15T17:46:44.213634'
extraction_method: deterministic
statistics:
  total_features: 30
  total_links: 73
  primary_tags:
    css: 10
    security: 1
    webapi: 5
    javascript: 1
    webgpu: 3
    multimedia: 1
  cross_cutting:
    privacy: 22
    enterprise: 4
    security: 3
    webgpu: 2
    experimental: 4
    ai: 2
features:
- title: CSS if() function
  content: "The CSS `if()` function provides a concise way to express conditional values. It accepts a series of condition-value\
    \ pairs, delimited by semicolons. The function evaluates each condition sequentially and returns the value associated\
    \ with the first true condition. If none of the conditions evaluate to true, the function returns an empty token stream.\
    \ This lets you express complex conditional logic in a simple and concise way.\n\n**Example:**\n```css\ndiv {\n  color:\
    \ var(--color);\n  background-color: if(style(--color: white): black; else: white);\n}\n.dark { --color: black; }\n.light\
    \ { --color: white; }\n```\n\n```html\n<div class=\"dark\">dark</div>\n<div class=\"light\">light</div>\n```\n\n**References:**\
    \ [Tracking bug #346977961](https://bugs.chromium.org/p/chromium/issues/detail?id=346977961) | [ChromeStatus.com entry](https://chromestatus.com/feature/5084924504915968)\
    \ | [Spec](https://www.w3.org/TR/css-values-5/#if-function)"
  heading_path:
  - Chrome 137 Release Notes
  - CSS and UI
  - CSS if() function
  links:
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=346977961
    link_type: tracking_bug
    title: 'Tracking bug #346977961'
  - url: https://chromestatus.com/feature/5084924504915968
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://www.w3.org/TR/css-values-5/#if-function
    link_type: spec
    title: Spec
  line_number: 9
  primary_tags:
  - name: css
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: CSS reading-flow, reading-order properties
  content: 'The `reading-flow` CSS property controls the order in which elements in a flex, grid, or block layout are exposed
    to accessibility tools and focused using tab keyboard focus navigation. The `reading-order` CSS property allows authors
    to manually-override the order within a reading flow container. It is an integer with default value of 0. Learn more about
    these properties in [Use CSS reading-flow for logical sequential focus navigation](https://developer.chrome.com/blog/reading-flow),
    and try out some examples.


    **References:** [Tracking bug #40932006](https://bugs.chromium.org/p/chromium/issues/detail?id=40932006) | [ChromeStatus.com
    entry](https://chromestatus.com/feature/5061928169472000) | [Spec](https://drafts.csswg.org/css-display-4/#reading-flow)'
  heading_path:
  - Chrome 137 Release Notes
  - CSS and UI
  - CSS reading-flow, reading-order properties
  links:
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=40932006
    link_type: tracking_bug
    title: 'Tracking bug #40932006'
  - url: https://chromestatus.com/feature/5061928169472000
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://drafts.csswg.org/css-display-4/#reading-flow
    link_type: other
    title: Spec
  - url: https://developer.chrome.com/blog/reading-flow
    link_type: other
    title: Use CSS reading-flow for logical sequential focus navigation
  line_number: 30
  primary_tags:
  - name: css
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: Ignore letter spacing in cursive scripts
  content: 'This feature adds logic to ignore the letter-spacing setting for cursive scripts as specified by the developer,
    in line with the specification, to ensure that letter spacing does not disrupt word structure and aims to produce better
    user experience for users relying on cursive scripts. With this feature, Chrome ensures that cursive scripts will be readable
    and properly spaced, even if the fonts don''t have advanced typographic features. The scripts this applies to in Chromium
    are Arabic, Hanifi Rohingya, Mandaic, Mongolian, N''Ko, Phags Pa, and Syriac as these scripts are considered cursive as
    per the specification.


    **References:** [Tracking bug #40618336](https://bugs.chromium.org/p/chromium/issues/detail?id=40618336) | [ChromeStatus.com
    entry](https://chromestatus.com/feature/5088256061988864) | [Spec](https://www.w3.org/TR/css-text-3/#letter-spacing-property)'
  heading_path:
  - Chrome 137 Release Notes
  - CSS and UI
  - Ignore letter spacing in cursive scripts
  links:
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=40618336
    link_type: tracking_bug
    title: 'Tracking bug #40618336'
  - url: https://chromestatus.com/feature/5088256061988864
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://www.w3.org/TR/css-text-3/#letter-spacing-property
    link_type: spec
    title: Spec
  line_number: 36
  primary_tags:
  - name: css
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: Selection API getComposedRanges and direction
  content: 'This feature ships two new API methods for the Selection API:

    - `Selection.direction` which returns the selection''s direction as either `none`, `forward`, or `backward`

    - `Selection.getComposedRanges()` which returns a list of 0 or 1 composed StaticRange


    A composed StaticRange is allowed to cross shadow boundaries, which a normal Range cannot.


    **Example:**

    ```javascript

    const range = getSelection().getComposedRanges({shadowRoots: [root]});

    ```


    If the selection crosses a shadow root boundary that isn''t provided in the shadowRoots list, then the endpoints of the
    StaticRange will be rescoped to be outside that tree. This makes sure Chrome doesn''t expose unknown shadow trees.


    **References:** [Tracking bug #40286116](https://bugs.chromium.org/p/chromium/issues/detail?id=40286116) | [ChromeStatus.com
    entry](https://chromestatus.com/feature/5069063455711232) | [Spec](https://w3c.github.io/selection-api/#dom-selection-getcomposedranges)'
  heading_path:
  - Chrome 137 Release Notes
  - CSS and UI
  - Selection API getComposedRanges and direction
  links:
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=40286116
    link_type: tracking_bug
    title: 'Tracking bug #40286116'
  - url: https://chromestatus.com/feature/5069063455711232
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://w3c.github.io/selection-api/#dom-selection-getcomposedranges
    link_type: spec
    title: Spec
  line_number: 42
  primary_tags:
  - name: css
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: 'Support offset-path: shape()'
  content: 'Support `offset-path: shape()`, to allow using responsive shapes to set the animation path.


    **References:** [Tracking bug #389713717](https://bugs.chromium.org/p/chromium/issues/detail?id=389713717) | [ChromeStatus.com
    entry](https://chromestatus.com/feature/5062848242884608) | [Spec](https://www.w3.org/TR/css-shapes-2/#shape-function)'
  heading_path:
  - Chrome 137 Release Notes
  - CSS and UI
  - 'Support offset-path: shape()'
  links:
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=389713717
    link_type: tracking_bug
    title: 'Tracking bug #389713717'
  - url: https://chromestatus.com/feature/5062848242884608
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://www.w3.org/TR/css-shapes-2/#shape-function
    link_type: spec
    title: Spec
  line_number: 59
  primary_tags:
  - name: css
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: Support the transform attribute on SVGSVGElement
  content: 'This feature enables the application of transformation properties—such as scaling, rotation, translation, and
    skewing—directly to the `<svg>` root element using its transform attribute. This enhancement lets you manipulate the entire
    SVG coordinate system or its contents as a whole, providing greater flexibility in creating dynamic, responsive, and interactive
    vector graphics. By supporting this attribute, the `<svg>` element can be transformed without requiring additional wrapper
    elements or complex CSS workarounds, streamlining the process of building scalable and animated web graphics.


    **References:** [Tracking bug #40313130](https://bugs.chromium.org/p/chromium/issues/detail?id=40313130) | [ChromeStatus.com
    entry](https://chromestatus.com/feature/5070863647424512) | [Spec](https://www.w3.org/TR/SVG2/types.html#InterfaceSVGTransformable)'
  heading_path:
  - Chrome 137 Release Notes
  - CSS and UI
  - Support the transform attribute on SVGSVGElement
  links:
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=40313130
    link_type: tracking_bug
    title: 'Tracking bug #40313130'
  - url: https://chromestatus.com/feature/5070863647424512
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://www.w3.org/TR/SVG2/types.html#InterfaceSVGTransformable
    link_type: spec
    title: Spec
  line_number: 65
  primary_tags:
  - name: css
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: System accent color for accent-color property
  content: 'This lets you use the operating system''s accent color for form elements. By using the `accent-color` CSS property,
    you can ensure that form elements such as checkboxes, radio buttons, and progress bars automatically adopt the accent
    color defined by the user''s operating system. This has been supported on macOS since 2021, and is now supported on Windows
    and ChromeOS.


    **References:** [Tracking bug #40764875](https://bugs.chromium.org/p/chromium/issues/detail?id=40764875) | [ChromeStatus.com
    entry](https://chromestatus.com/feature/5088516877221888) | [Spec](https://www.w3.org/TR/css-ui-4/#accent-color)'
  heading_path:
  - Chrome 137 Release Notes
  - CSS and UI
  - System accent color for accent-color property
  links:
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=40764875
    link_type: tracking_bug
    title: 'Tracking bug #40764875'
  - url: https://chromestatus.com/feature/5088516877221888
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://www.w3.org/TR/css-ui-4/#accent-color
    link_type: spec
    title: Spec
  line_number: 71
  primary_tags:
  - name: css
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: Allow <use> to reference an external document's root element by omitting the fragment
  content: "This feature streamlines the SVG `<use>` element by loosening referencing requirements. Before Chrome 137, you\
    \ had to explicitly reference fragments within the SVG document. If no fragment ID is given `<use>` won't be able to resolve\
    \ the target and nothing will be rendered or referred.\n\n**Example:**\nA `<use>` element referencing an external file\
    \ with fragment identifier:\n```html\n<svg>\n  <use xlink:href=\"myshape.svg#icon\"></use>\n</svg>\n```\n\nIn this example,\
    \ `#icon` is the fragment identifier pointing to an element with `id=\"icon\"` within `myshape.svg`.\n\nWithout a fragment\
    \ identifier:\n```html\n<svg>\n  <use xlink:href=\"myshape.svg\"></use>\n</svg>\n```\n\nWith this feature, omitting fragments\
    \ or just giving the external svg file name will automatically reference the root element, eliminating the need for you\
    \ to alter the referenced document just to assign an ID to the root. This enhancement simplifies this manual editing process\
    \ and improves efficiency.\n\n**References:** [Tracking bug #40362369](https://bugs.chromium.org/p/chromium/issues/detail?id=40362369)\
    \ | [ChromeStatus.com entry](https://chromestatus.com/feature/5078775255900160) | [Spec](https://www.w3.org/TR/SVG2/struct.html#UseElement)"
  heading_path:
  - Chrome 137 Release Notes
  - CSS and UI
  - Allow <use> to reference an external document's root element by omitting the fragment
  links:
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=40362369
    link_type: tracking_bug
    title: 'Tracking bug #40362369'
  - url: https://chromestatus.com/feature/5078775255900160
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://www.w3.org/TR/SVG2/struct.html#UseElement
    link_type: spec
    title: Spec
  line_number: 77
  primary_tags:
  - name: css
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: Canvas floating point color types
  content: 'Introduces the ability to use floating point pixel formats (as opposed to 8-bit fixed point) with `CanvasRenderingContext2D`,
    `OffscreenCanvasRenderingContext2D`, and `ImageData`. This is necessary for high precision applications (for example,
    medical visualization), high dynamic range content, and linear working color spaces.


    **References:** [Tracking bug #40245602](https://bugs.chromium.org/p/chromium/issues/detail?id=40245602) | [ChromeStatus.com
    entry](https://chromestatus.com/feature/5053734768197632) | [Spec](https://html.spec.whatwg.org/multipage/canvas.html#the-2d-rendering-context)'
  heading_path:
  - Chrome 137 Release Notes
  - CSS and UI
  - Canvas floating point color types
  links:
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=40245602
    link_type: tracking_bug
    title: 'Tracking bug #40245602'
  - url: https://chromestatus.com/feature/5053734768197632
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://html.spec.whatwg.org/multipage/canvas.html#the-2d-rendering-context
    link_type: spec
    title: Spec
  line_number: 102
  primary_tags:
  - name: css
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: 'view-transition-name: match-element'
  content: 'The `match-element` value generates a unique ID based on the element''s identity and renames the same for this
    element. This is used in Single Page App cases where the element is being moved around and you want to animate it with
    a view transition.


    **References:** [Tracking bug #365997248](https://bugs.chromium.org/p/chromium/issues/detail?id=365997248) | [ChromeStatus.com
    entry](https://chromestatus.com/feature/5092488609931264) | [Spec](https://drafts.csswg.org/css-view-transitions-2/#view-transition-name-prop)'
  heading_path:
  - Chrome 137 Release Notes
  - CSS and UI
  - 'view-transition-name: match-element'
  links:
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=365997248
    link_type: tracking_bug
    title: 'Tracking bug #365997248'
  - url: https://chromestatus.com/feature/5092488609931264
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://drafts.csswg.org/css-view-transitions-2/#view-transition-name-prop
    link_type: other
    title: Spec
  line_number: 108
  primary_tags:
  - name: css
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: 'Align error type thrown for payment WebAuthn credential creation: SecurityError becomes NotAllowedError'
  content: 'Correct the error type thrown during WebAuthn credential creation for payment credentials. Due to a historic specification
    mismatch, creating a payment credential in a cross-origin iframe without a user activation would throw a `SecurityError`
    instead of a `NotAllowedError`, which is what is thrown for non-payment credentials. This is a breaking change, albeit
    a niche one. Code that previously detected the type of error thrown (for example, `e instanceof SecurityError`) is affected.
    Code that just generally handles errors during credential creation (for example, `catch (e)`) will continue to function
    correctly.


    **References:** [Tracking bug #41484826](https://bugs.chromium.org/p/chromium/issues/detail?id=41484826) | [ChromeStatus.com
    entry](https://chromestatus.com/feature/5096945194598400) | [Spec](https://w3c.github.io/webauthn/#sctn-creating-a-credential)'
  heading_path:
  - Chrome 137 Release Notes
  - Payments
  - 'Align error type thrown for payment WebAuthn credential creation: SecurityError becomes NotAllowedError'
  links:
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=41484826
    link_type: tracking_bug
    title: 'Tracking bug #41484826'
  - url: https://chromestatus.com/feature/5096945194598400
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://w3c.github.io/webauthn/#sctn-creating-a-credential
    link_type: spec
    title: Spec
  line_number: 116
  primary_tags:
  - name: security
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: 'Blob URL Partitioning: Fetching/Navigation'
  content: 'As a continuation of Storage Partitioning, Chrome has implemented partitioning of Blob URL access by Storage Key
    (top-level site, frame origin, and the has-cross-site-ancestor boolean), with the exception of top-level navigations which
    will remain partitioned only by frame origin. This behavior is similar to what''s currently implemented by both Firefox
    and Safari, and aligns Blob URL usage with the partitioning scheme used by other storage APIs as part of Storage Partitioning.
    In addition, Chrome now enforces noopener on renderer-initiated top-level navigations to Blob URLs where the corresponding
    site is cross-site to the top-level site performing the navigation. This aligns Chrome with similar behavior in Safari,
    and the relevant specs have been updated to reflect these changes.


    **Note:** This change can be temporarily reverted by setting the `PartitionedBlobURLUsage` policy. The policy will be
    deprecated when the other storage partitioning related enterprise policies are deprecated.


    **References:** [Tracking bug #40057646](https://bugs.chromium.org/p/chromium/issues/detail?id=40057646) | [ChromeStatus.com
    entry](https://chromestatus.com/feature/5037311976488960)'
  heading_path:
  - Chrome 137 Release Notes
  - Web APIs
  - 'Blob URL Partitioning: Fetching/Navigation'
  links:
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=40057646
    link_type: tracking_bug
    title: 'Tracking bug #40057646'
  - url: https://chromestatus.com/feature/5037311976488960
    link_type: chromestatus
    title: ChromeStatus.com entry
  line_number: 124
  primary_tags:
  - name: webapi
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
  - enterprise
- title: Call stacks in crash reports from unresponsive web pages
  content: 'This feature captures the JavaScript call stack when a web page becomes unresponsive due to JavaScript code running
    an infinite loop or other very long computation. This helps developers to identify the cause of the unresponsiveness and
    fix it more easily. The JavaScript call stack is included in the crash reporting API when the reason is unresponsive.


    **References:** [Tracking bug #1445539](https://bugs.chromium.org/p/chromium/issues/detail?id=1445539) | [ChromeStatus.com
    entry](https://chromestatus.com/feature/5045134925406208) | [Spec](https://w3c.github.io/reporting/#crash-report)'
  heading_path:
  - Chrome 137 Release Notes
  - Web APIs
  - Call stacks in crash reports from unresponsive web pages
  links:
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=1445539
    link_type: tracking_bug
    title: 'Tracking bug #1445539'
  - url: https://chromestatus.com/feature/5045134925406208
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://w3c.github.io/reporting/#crash-report
    link_type: spec
    title: Spec
  line_number: 132
  primary_tags:
  - name: webapi
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: Document-Isolation-Policy
  content: 'Document-Isolation-Policy lets a document enable crossOriginIsolation for itself, without having to deploy COOP
    or COEP, and regardless of the crossOriginIsolation status of the page. The policy is backed by process isolation. Additionally,
    the document non-CORS cross-origin subresources will either be loaded without credentials or will need to have a CORP
    header.


    **References:** [Tracking bug #333029146](https://bugs.chromium.org/p/chromium/issues/detail?id=333029146) | [ChromeStatus.com
    entry](https://chromestatus.com/feature/5048940296830976) | [Spec](https://wicg.github.io/document-isolation-policy/)'
  heading_path:
  - Chrome 137 Release Notes
  - Web APIs
  - Document-Isolation-Policy
  links:
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=333029146
    link_type: tracking_bug
    title: 'Tracking bug #333029146'
  - url: https://chromestatus.com/feature/5048940296830976
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://wicg.github.io/document-isolation-policy/
    link_type: spec
    title: Spec
  line_number: 138
  primary_tags:
  - name: webapi
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - security
  - privacy
  - enterprise
- title: Ed25519 in web cryptography
  content: 'This feature adds support for Curve25519 algorithms in the Web Cryptography API, namely the signature algorithm
    Ed25519.


    **References:** [Tracking bug #1370697](https://bugs.chromium.org/p/chromium/issues/detail?id=1370697) | [ChromeStatus.com
    entry](https://chromestatus.com/feature/5056122982457344) | [Spec](https://www.rfc-editor.org/rfc/rfc8032.html)'
  heading_path:
  - Chrome 137 Release Notes
  - Web APIs
  - Ed25519 in web cryptography
  links:
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=1370697
    link_type: tracking_bug
    title: 'Tracking bug #1370697'
  - url: https://chromestatus.com/feature/5056122982457344
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://www.rfc-editor.org/rfc/rfc8032.html
    link_type: other
    title: Spec
  line_number: 144
  primary_tags:
  - name: webapi
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: HSTS tracking prevention
  content: 'Mitigates user tracking by third-parties using the HSTS cache. This feature only allows HSTS upgrades for top-level
    navigations and blocks HSTS upgrades for sub-resource requests. Doing so makes it infeasible for third-party sites to
    use the HSTS cache in order to track users across the web.


    **References:** [Tracking bug #40725781](https://bugs.chromium.org/p/chromium/issues/detail?id=40725781) | [ChromeStatus.com
    entry](https://chromestatus.com/feature/5065878464307200)'
  heading_path:
  - Chrome 137 Release Notes
  - Web APIs
  - HSTS tracking prevention
  links:
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=40725781
    link_type: tracking_bug
    title: 'Tracking bug #40725781'
  - url: https://chromestatus.com/feature/5065878464307200
    link_type: chromestatus
    title: ChromeStatus.com entry
  line_number: 150
  primary_tags:
  - name: webapi
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: JavaScript promise integration
  content: 'JavaScript Promise Integration (JSPI) is an API that allows WebAssembly applications to integrate with JavaScript
    Promises. It allows a WebAssembly program to act as the generator of a Promise, and it allows the WebAssembly program
    to interact with Promise-bearing APIs. In particular, when an application uses JSPI to call a Promise-bearing (JavaScript)
    API, the WebAssembly code is suspended; and the original caller to the WebAssembly program is given a Promise that will
    be fulfilled when the WebAssembly program finally completes.


    **References:** [ChromeStatus.com entry](https://chromestatus.com/feature/5059306691878912) | [Spec](https://github.com/WebAssembly/js-promise-integration)'
  heading_path:
  - Chrome 137 Release Notes
  - WebAssembly
  - JavaScript promise integration
  links:
  - url: https://chromestatus.com/feature/5059306691878912
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://github.com/WebAssembly/js-promise-integration
    link_type: github
    title: Spec
  line_number: 158
  primary_tags:
  - name: javascript
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns: []
- title: Branch Hints
  content: 'Improves the performance of compiled WebAssembly code by informing the engine that a particular branch instruction
    is very likely to take a specific path. This allows the engine to make better decisions for code layout (improving instruction
    cache hits) and register allocation.


    **References:** [ChromeStatus.com entry](https://chromestatus.com/feature/5089072889290752) | [Spec](https://github.com/WebAssembly/branch-hinting)'
  heading_path:
  - Chrome 137 Release Notes
  - WebAssembly
  - Branch Hints
  links:
  - url: https://chromestatus.com/feature/5089072889290752
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://github.com/WebAssembly/branch-hinting
    link_type: github
    title: Spec
  line_number: 164
  primary_tags: []
  cross_cutting_concerns: []
- title: GPUTextureView for externalTexture binding
  content: 'A `GPUTextureView` is now allowed to be used for an `externalTexture` binding when creating a `GPUBindGroup`.


    **References:** [Tracking bug #398752857](https://bugs.chromium.org/p/chromium/issues/detail?id=398752857) | [ChromeStatus.com
    entry](https://chromestatus.com/feature/5107071463104512) | [Spec](https://gpuweb.github.io/gpuweb/#gpubindgroup)'
  heading_path:
  - Chrome 137 Release Notes
  - WebGPU
  - GPUTextureView for externalTexture binding
  links:
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=398752857
    link_type: tracking_bug
    title: 'Tracking bug #398752857'
  - url: https://chromestatus.com/feature/5107071463104512
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://gpuweb.github.io/gpuweb/#gpubindgroup
    link_type: github
    title: Spec
  line_number: 175
  primary_tags:
  - name: webgpu
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: copyBufferToBuffer overload
  content: 'The `GPUCommandEncoder` `copyBufferToBuffer()` method now includes a simpler way to copy entire buffers using
    a new overload with optional offsets and size parameters.


    **References:** [ChromeStatus.com entry](https://chromestatus.com/feature/5103419089608704) | [Spec](https://gpuweb.github.io/gpuweb/#dom-gpucommandencoder-copybuffertobuffer)'
  heading_path:
  - Chrome 137 Release Notes
  - WebGPU
  - copyBufferToBuffer overload
  links:
  - url: https://chromestatus.com/feature/5103419089608704
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://gpuweb.github.io/gpuweb/#dom-gpucommandencoder-copybuffertobuffer
    link_type: github
    title: Spec
  line_number: 181
  primary_tags:
  - name: webgpu
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns: []
- title: 1. Texture View for External Texture Binding
  content: "- Now allows a compatible `GPUTextureView` to be used in place of a `GPUExternalTexture` binding\n- Simplifies\
    \ shader logic in video effects pipelines\n- Reduces need for dynamically compiling shaders\n\n```javascript\nconst bindGroup\
    \ = myDevice.createBindGroup({\n  layout: pipeline.getBindGroupLayout(0),\n  entries: [\n    { binding: 0, resource: texture.createView()\
    \ }, // Texture view for external texture\n    { binding: 1, resource: { buffer: myBuffer } },\n  ],\n});\n```"
  heading_path:
  - Chrome 137 Release Notes
  - Key Updates
  - 1. Texture View for External Texture Binding
  links: []
  line_number: 193
  primary_tags: []
  cross_cutting_concerns: []
- title: 2. Buffer Copy Simplification
  content: '- New method overload allows omitting offsets and size parameters in `copyBufferToBuffer()`

    - Simplifies copying entire buffers


    ```javascript

    // Copy entire buffer without specifying offsets

    myCommandEncoder.copyBufferToBuffer(srcBuffer, dstBuffer);

    ```'
  heading_path:
  - Chrome 137 Release Notes
  - Key Updates
  - 2. Buffer Copy Simplification
  links: []
  line_number: 208
  primary_tags: []
  cross_cutting_concerns: []
- title: 3. WGSL Workgroup Uniform Load
  content: "- New `workgroupUniformLoad(ptr)` overload for atomic loads\n- Atomically loads value for all workgroup invocations\n\
    \n```wgsl\n@compute @workgroup_size(1, 1)\nfn main(@builtin(local_invocation_index) lid: u32) {\n  if (lid == 0) {\n \
    \   atomicStore(&(wgvar), 42u);\n  }\n  buffer[lid] = workgroupUniformLoad(&wgvar);\n}\n```"
  heading_path:
  - Chrome 137 Release Notes
  - Key Updates
  - 3. WGSL Workgroup Uniform Load
  links: []
  line_number: 217
  primary_tags: []
  cross_cutting_concerns:
  - webgpu
- title: 4. GPUAdapterInfo Power Preference
  content: "- Non-standard `powerPreference` attribute available with \"WebGPU Developer Features\" flag\n- Returns `\"low-power\"\
    ` or `\"high-performance\"`\n\n```javascript\nfunction checkPowerPreferenceForGpuDevice(device) {\n  const powerPreference\
    \ = device.adapterInfo.powerPreference;\n  // Adjust settings based on GPU power preference\n}\n```"
  heading_path:
  - Chrome 137 Release Notes
  - Key Updates
  - 4. GPUAdapterInfo Power Preference
  links: []
  line_number: 231
  primary_tags:
  - name: webgpu
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - webgpu
- title: 5. Removed Compatibility Mode Attribute
  content: '- Experimental `compatibilityMode` attribute removed

    - Replaced by standardized approach for compatibility'
  heading_path:
  - Chrome 137 Release Notes
  - Key Updates
  - 5. Removed Compatibility Mode Attribute
  links: []
  line_number: 242
  primary_tags: []
  cross_cutting_concerns:
  - experimental
- title: IP address logging and reporting
  content: 'Chrome Enterprise is enhancing security monitoring and incident response capabilities by collecting and reporting
    local and remote IP addresses and sending those IP addresses to the Security Investigation Logs (SIT). In addition, Chrome
    Enterprise will allow admins to optionally send the IP addresses to first-party and third-party SIEM providers through
    the Chrome Enterprise Reporting connector. This is available for Chrome Enterprise Core customers.


    **References:** [ChromeStatus.com entry](https://chromestatus.com/feature/5110849951309824)'
  heading_path:
  - Chrome 137 Release Notes
  - Enterprise
  - IP address logging and reporting
  links:
  - url: https://chromestatus.com/feature/5110849951309824
    link_type: chromestatus
    title: ChromeStatus.com entry
  line_number: 248
  primary_tags: []
  cross_cutting_concerns:
  - security
  - privacy
  - enterprise
- title: Full frame rate render blocking attribute
  content: 'Adds a new render blocking token `full-frame-rate` to the blocking attributes. When the renderer is blocked with
    the `full-frame-rate` token, the renderer will work at a lower frame rate so as to reserve more resources for loading.


    **References:** [Tracking bug #397832388](https://bugs.chromium.org/p/chromium/issues/detail?id=397832388) | [ChromeStatus.com
    entry](https://chromestatus.com/feature/5109023781429248)'
  heading_path:
  - Chrome 137 Release Notes
  - Origin trials
  - Full frame rate render blocking attribute
  links:
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=397832388
    link_type: tracking_bug
    title: 'Tracking bug #397832388'
  - url: https://chromestatus.com/feature/5109023781429248
    link_type: chromestatus
    title: ChromeStatus.com entry
  line_number: 256
  primary_tags: []
  cross_cutting_concerns:
  - privacy
- title: Pause media playback on not-rendered iframes
  content: 'Adds a `media-playback-while-not-rendered` permission policy to allow embedder websites to pause media playback
    of embedded iframes which aren''t rendered—that is, have their display property set to `none`. This should allow developers
    to build more user-friendly experiences and to also improve the performance by letting the browser handle the playback
    of content that is not visible to users.


    **References:** [Origin Trial](https://developer.chrome.com/origintrials/#/trials/active) | [Tracking bug #351354996](https://bugs.chromium.org/p/chromium/issues/detail?id=351354996)
    | [ChromeStatus.com entry](https://chromestatus.com/feature/5082854470868992)'
  heading_path:
  - Chrome 137 Release Notes
  - Origin trials
  - Pause media playback on not-rendered iframes
  links:
  - url: https://developer.chrome.com/origintrials/#/trials/active
    link_type: other
    title: Origin Trial
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=351354996
    link_type: tracking_bug
    title: 'Tracking bug #351354996'
  - url: https://chromestatus.com/feature/5082854470868992
    link_type: chromestatus
    title: ChromeStatus.com entry
  line_number: 262
  primary_tags:
  - name: multimedia
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - security
  - privacy
  - experimental
  - enterprise
- title: Rewriter API
  content: 'The Rewriter API transforms and rephrases input text in requested ways, backed by an on-device AI language model.
    Developers may use this API to remove redundancies within a text in order to fit into a word limit, rephrase messages
    to suit the intended audience or to be more constructive if a message is found to use toxic language, rephrasing a post
    or article to use simpler words and concepts and more.


    **References:** [Origin Trial](https://developer.chrome.com/origintrials/#/trials/active) | [Tracking bug #358214322](https://bugs.chromium.org/p/chromium/issues/detail?id=358214322)
    | [ChromeStatus.com entry](https://chromestatus.com/feature/5089854436556800) | [Spec](https://wicg.github.io/rewriter-api/)'
  heading_path:
  - Chrome 137 Release Notes
  - Origin trials
  - Rewriter API
  links:
  - url: https://developer.chrome.com/origintrials/#/trials/active
    link_type: other
    title: Origin Trial
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=358214322
    link_type: tracking_bug
    title: 'Tracking bug #358214322'
  - url: https://chromestatus.com/feature/5089854436556800
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://wicg.github.io/rewriter-api/
    link_type: spec
    title: Spec
  line_number: 268
  primary_tags: []
  cross_cutting_concerns:
  - ai
  - privacy
  - experimental
- title: Writer API
  content: 'The Writer API can be used for writing new material given a writing task prompt, backed by an on-device AI language
    model. Developers will be able to use this API to generate textual explanations of structured data, composing a post about
    a product based on reviews or product description, expanding on pro and con lists into full views and more.


    **References:** [Origin Trial](https://developer.chrome.com/origintrials/#/trials/active) | [Tracking bug #357967382](https://bugs.chromium.org/p/chromium/issues/detail?id=357967382)
    | [ChromeStatus.com entry](https://chromestatus.com/feature/5089855470993408) | [Spec](https://wicg.github.io/writer-api/)


    ---


    *Except as otherwise noted, the content of this page is licensed under the [Creative Commons Attribution 4.0 License](https://creativecommons.org/licenses/by/4.0/),
    and code samples are licensed under the [Apache 2.0 License](https://www.apache.org/licenses/LICENSE-2.0). For details,
    see the [Google Developers Site Policies](https://developers.google.com/site-policies). Java is a registered trademark
    of Oracle and/or its affiliates.*


    *Last updated 2025-05-27 UTC.*'
  heading_path:
  - Chrome 137 Release Notes
  - Origin trials
  - Writer API
  links:
  - url: https://developer.chrome.com/origintrials/#/trials/active
    link_type: other
    title: Origin Trial
  - url: https://bugs.chromium.org/p/chromium/issues/detail?id=357967382
    link_type: tracking_bug
    title: 'Tracking bug #357967382'
  - url: https://chromestatus.com/feature/5089855470993408
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://wicg.github.io/writer-api/
    link_type: spec
    title: Spec
  - url: https://creativecommons.org/licenses/by/4.0/
    link_type: other
    title: Creative Commons Attribution 4.0 License
  - url: https://www.apache.org/licenses/LICENSE-2.0
    link_type: other
    title: Apache 2.0 License
  - url: https://developers.google.com/site-policies
    link_type: other
    title: Google Developers Site Policies
  line_number: 274
  primary_tags: []
  cross_cutting_concerns:
  - ai
  - privacy
  - experimental
