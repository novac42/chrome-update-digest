version: '134'
channel: stable
area: performance
extraction_timestamp: '2025-10-27T17:40:35.725242'
extraction_method: deterministic
statistics:
  total_features: 4
  total_links: 11
  primary_tags:
    performance: 4
  cross_cutting:
    privacy: 3
    enterprise: 1
features:
- title: 'Document-Policy: `expect-no-linked-resources`'
  content: "The `expect-no-linked-resources` configuration point in Document Policy allows a document to hint to the user\
    \ agent to better optimize its loading sequence, such as not using the default speculative parsing behavior.\n\nUser Agents\
    \ have implemented speculative parsing of HTML to speculatively fetch resources that are present in the HTML markup, to\
    \ speed up page loading. For the vast majority of pages on the Web that have resources declared in the HTML markup, the\
    \ optimization is beneficial and the cost paid in determining such resources is a sound tradeoff. However, the following\
    \ scenarios might result in a sub-optimal performance tradeoff versus the explicit time spent parsing HTML for determining\
    \ sub resources to fetch:\n\n  * Pages that don't have any resources declared in the HTML.\n  * Large HTML pages with\
    \ minimal or no resource loads that could explicitly control preloading resources using other preload mechanisms available.\n\
    \nThe `expect-no-linked-resources` Document-Policy hints the User Agent that it may choose to optimize out the time spent\
    \ in such sub resource determination.\n\n[Tracking bug #365632977](https://issues.chromium.org/issues/365632977) | [ChromeStatus.com\
    \ entry](https://chromestatus.com/feature/5202800863346688) | [Spec](https://github.com/whatwg/html/pull/10718)"
  heading_path:
  - Performance
  - 'Document-Policy: `expect-no-linked-resources`'
  links:
  - url: https://issues.chromium.org/issues/365632977
    link_type: other
    title: 'Tracking bug #365632977'
  - url: https://chromestatus.com/feature/5202800863346688
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://github.com/whatwg/html/pull/10718
    link_type: github
    title: Spec
  line_number: 3
  primary_tags:
  - name: performance
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
  - enterprise
- title: Explicit resource management (async)
  content: 'These features address a common pattern in software development regarding the lifetime and management of various
    resources (for example memory and I/O). This pattern generally includes the allocation of a resource and the ability to
    explicitly release critical resources.


    [Tracking bug #42203814](https://issues.chromium.org/issues/42203814) | [ChromeStatus.com entry](https://chromestatus.com/feature/5087324181102592)
    | [Spec](https://tc39.es/proposal-explicit-resource-management)'
  heading_path:
  - Performance
  - Explicit resource management (async)
  links:
  - url: https://issues.chromium.org/issues/42203814
    link_type: other
    title: 'Tracking bug #42203814'
  - url: https://chromestatus.com/feature/5087324181102592
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://tc39.es/proposal-explicit-resource-management
    link_type: other
    title: Spec
  line_number: 16
  primary_tags:
  - name: performance
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: Explicit resource management (sync)
  content: 'These features address a common pattern in software development regarding the lifetime and management of various
    resources (for example memory and I/O). This pattern generally includes the allocation of a resource and the ability to
    explicitly release critical resources.


    [Tracking bug #42203506](https://issues.chromium.org/issues/42203506) | [ChromeStatus.com entry](https://chromestatus.com/feature/5071680358842368)
    | [Spec](https://tc39.es/proposal-explicit-resource-management)'
  heading_path:
  - Performance
  - Explicit resource management (sync)
  links:
  - url: https://issues.chromium.org/issues/42203506
    link_type: other
    title: 'Tracking bug #42203506'
  - url: https://chromestatus.com/feature/5071680358842368
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://tc39.es/proposal-explicit-resource-management
    link_type: other
    title: Spec
  line_number: 22
  primary_tags:
  - name: performance
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: Extend the `console.timeStamp` API to support measurements and presentation options
  content: 'Extends the `console.timeStamp()` API, in a backwards-compatible manner, to provide a high-performance method
    for instrumenting applications and surfacing timing data to the Performance panel in DevTools.


    Timing entries added with the API can have a custom timestamp, duration and presentation options (track, swimlane, and
    color).


    [ChromeStatus.com entry](https://chromestatus.com/feature/5133241999425536) | [Spec](https://docs.google.com/document/d/1juT7esZ62ydio-SQwEVsY7pdidKhjAphvUghWrlw0II/edit?tab=t.0#heading=h.ekp1q3o1v7v3)'
  heading_path:
  - Performance
  - Extend the `console.timeStamp` API to support measurements and presentation options
  links:
  - url: https://chromestatus.com/feature/5133241999425536
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://docs.google.com/document/d/1juT7esZ62ydio-SQwEVsY7pdidKhjAphvUghWrlw0II/edit?tab=t.0#heading=h.ekp1q3o1v7v3
    link_type: other
    title: Spec
  line_number: 28
  primary_tags:
  - name: performance
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns: []
