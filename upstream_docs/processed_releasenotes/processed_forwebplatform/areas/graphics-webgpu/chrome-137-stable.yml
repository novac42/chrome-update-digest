version: '137'
channel: stable
area: graphics-webgpu
extraction_timestamp: '2025-09-21T15:27:46.019971'
extraction_method: deterministic
statistics:
  total_features: 5
  total_links: 0
  primary_tags:
    webgpu: 5
  cross_cutting:
    webgpu: 2
features:
- title: 1. Texture View for External Texture Binding
  content: "- Now allows a compatible `GPUTextureView` to be used in place of a `GPUExternalTexture` binding\n- Simplifies\
    \ shader logic in video effects pipelines\n- Reduces need for dynamically compiling shaders\n\n```javascript\nconst bindGroup\
    \ = myDevice.createBindGroup({\n  layout: pipeline.getBindGroupLayout(0),\n  entries: [\n    { binding: 0, resource: texture.createView()\
    \ }, // Texture view for external texture\n    { binding: 1, resource: { buffer: myBuffer } },\n  ],\n});\n```"
  heading_path:
  - Graphics and WebGPU - Chrome 137
  - Key Updates
  - 1. Texture View for External Texture Binding
  links: []
  line_number: 5
  primary_tags:
  - name: webgpu
    priority: secondary
    source: heading
    confidence: 1.0
  cross_cutting_concerns: []
- title: 2. Buffer Copy Simplification
  content: '- New method overload allows omitting offsets and size parameters in `copyBufferToBuffer()`

    - Simplifies copying entire buffers


    ```javascript

    // Copy entire buffer without specifying offsets

    myCommandEncoder.copyBufferToBuffer(srcBuffer, dstBuffer);

    ```'
  heading_path:
  - Graphics and WebGPU - Chrome 137
  - Key Updates
  - 2. Buffer Copy Simplification
  links: []
  line_number: 20
  primary_tags:
  - name: webgpu
    priority: secondary
    source: heading
    confidence: 1.0
  cross_cutting_concerns: []
- title: 3. WGSL Workgroup Uniform Load
  content: "- New `workgroupUniformLoad(ptr)` overload for atomic loads\n- Atomically loads value for all workgroup invocations\n\
    \n```wgsl\n@compute @workgroup_size(1, 1)\nfn main(@builtin(local_invocation_index) lid: u32) {\n  if (lid == 0) {\n \
    \   atomicStore(&(wgvar), 42u);\n  }\n  buffer[lid] = workgroupUniformLoad(&wgvar);\n}\n```"
  heading_path:
  - Graphics and WebGPU - Chrome 137
  - Key Updates
  - 3. WGSL Workgroup Uniform Load
  links: []
  line_number: 29
  primary_tags:
  - name: webgpu
    priority: secondary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - webgpu
- title: 4. GPUAdapterInfo Power Preference
  content: "- Non-standard `powerPreference` attribute available with \"WebGPU Developer Features\" flag\n- Returns `\"low-power\"\
    ` or `\"high-performance\"`\n\n```javascript\nfunction checkPowerPreferenceForGpuDevice(device) {\n  const powerPreference\
    \ = device.adapterInfo.powerPreference;\n  // Adjust settings based on GPU power preference\n}\n```"
  heading_path:
  - Graphics and WebGPU - Chrome 137
  - Key Updates
  - 4. GPUAdapterInfo Power Preference
  links: []
  line_number: 43
  primary_tags:
  - name: webgpu
    priority: secondary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - webgpu
- title: 5. Removed Compatibility Mode Attribute
  content: '- Experimental `compatibilityMode` attribute removed

    - Replaced by standardized approach for compatibility'
  heading_path:
  - Graphics and WebGPU - Chrome 137
  - Key Updates
  - 5. Removed Compatibility Mode Attribute
  links: []
  line_number: 54
  primary_tags:
  - name: webgpu
    priority: secondary
    source: heading
    confidence: 1.0
  cross_cutting_concerns: []
