version: '128'
channel: stable
area: javascript
extraction_timestamp: '2025-08-13T15:22:59.140481'
extraction_method: deterministic
statistics:
  total_features: 3
  total_links: 9
  primary_tags:
    javascript: 3
  cross_cutting:
    security: 1
    privacy: 1
features:
- title: '`Promise.try`'
  content: '`Promise.try` is a [TC39 proposal](https://tc39.es/proposal-promise-try/) for a new static method. `Promise.try(f)`
    is shorthand for `new Promise(resolve => resolve(f()))`.


    [ChromeStatus.com entry](https://chromestatus.com/feature/6315704705089536) | [Spec](https://tc39.es/proposal-promise-try)'
  heading_path:
  - Chrome 128
  - JavaScript
  - '`Promise.try`'
  links:
  - url: https://tc39.es/proposal-promise-try/
    link_type: other
    title: TC39 proposal
  - url: https://chromestatus.com/feature/6315704705089536
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://tc39.es/proposal-promise-try
    link_type: other
    title: Spec
  line_number: 112
  primary_tags:
  - name: javascript
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns: []
- title: WebAuthn hints
  content: 'The new `hints` parameter in WebAuthn requests lets sites provide guidance to browsers to guide their UI. The
    canonical use case is enterprises that know their internal sites use only security keys and want to be able to communicate
    so that browsers focus the UI on that case.


    Hints also resolve a tension where the current `authenticatorAttachment` parameter is strict: setting it to `platform`
    excludes all cross-platform options.


    [ChromeStatus.com entry](https://chromestatus.com/feature/5145737733341184) | [Spec](https://w3c.github.io/webauthn/#enum-hints)'
  heading_path:
  - Chrome 128
  - JavaScript
  - WebAuthn hints
  links:
  - url: https://chromestatus.com/feature/5145737733341184
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://w3c.github.io/webauthn/#enum-hints
    link_type: spec
    title: Spec
  line_number: 118
  primary_tags:
  - name: javascript
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - security
- title: Write `image/svg+xml` content in UTF-8 format on Windows
  content: 'Switch to UTF-8 on Windows while writing `image/svg+xml` format to the clipboard. HTML format already uses UTF-*
    on Windows and this will allow copying and pasting SVG images from the clipboard.


    On all other supported platforms, `image/svg+xml` is serialized into UTF-8 before it gets written to the clipboard.


    [Demo](https://webdbg.com/test/svg) | [Tracking bug #338250106](https://issues.chromium.org/issues/338250106) | [ChromeStatus.com
    entry](https://chromestatus.com/feature/5417299782926336) | [Spec](https://w3c.github.io/clipboard-apis/#optional-data-types-x)'
  heading_path:
  - Chrome 128
  - JavaScript
  - Write `image/svg+xml` content in UTF-8 format on Windows
  links:
  - url: https://webdbg.com/test/svg
    link_type: other
    title: Demo
  - url: https://issues.chromium.org/issues/338250106
    link_type: other
    title: 'Tracking bug #338250106'
  - url: https://chromestatus.com/feature/5417299782926336
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://w3c.github.io/clipboard-apis/#optional-data-types-x
    link_type: spec
    title: Spec
  line_number: 126
  primary_tags:
  - name: javascript
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
