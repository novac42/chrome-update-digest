version: '126'
channel: stable
area: graphics-webgpu
extraction_timestamp: '2025-08-17T21:27:00.569134'
extraction_method: deterministic
statistics:
  total_features: 10
  total_links: 23
  primary_tags:
    webgpu: 10
    storage: 1
    multimedia: 1
    deprecation: 1
  cross_cutting:
    webgpu: 5
    security: 3
    privacy: 3
    enterprise: 1
features:
- title: Increase maxTextureArrayLayers limit
  content: "The maximum allowed value for the depth or layer count of a 2D texture is 256 by default. It's now possible to\
    \ request up to 2048 by using the [maxTextureArrayLayers](https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxtexturearraylayers)\
    \ limit when supported. See the following example and [issue 42241514](https://issues.chromium.org/issues/42241514).\n\
    \    \n    \n    const adapter = await navigator.gpu.requestAdapter();\n    if (adapter.limits.maxTextureArrayLayers <\
    \ 30) {\n      // When the desired limit isn't supported, take action to either fall back to\n      // a code path that\
    \ does not require the higher limit or notify the user that\n      // their device does not meet minimum requirements.\n\
    \    }\n    \n    // Request highest limit of max texture array layers attributes.\n    const device = await adapter.requestDevice({\n\
    \      requiredLimits: { maxTextureArrayLayers: 2048 }\n    });"
  heading_path:
  - What's New in WebGPU (Chrome 126)
  - Increase maxTextureArrayLayers limit
  links:
  - url: https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxtexturearraylayers
    link_type: github
    title: maxTextureArrayLayers
  - url: https://issues.chromium.org/issues/42241514
    link_type: other
    title: issue 42241514
  line_number: 143
  primary_tags:
  - name: webgpu
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - webgpu
- title: Buffer upload optimization for Vulkan backend
  content: 'A fast path is now available when calling the [writeBuffer()](https://developer.mozilla.org/docs/Web/API/GPUQueue/writeBuffer)
    method of the GPUQueue for Vulkan backend. The data may now be written directly into the destination buffer, eliminating
    the need for an extra copy and synchronization. This optimization reduces memory traffic needed to upload data to the
    GPU.


    The fast path optimization requires the buffer''s memory to be host visible and without any pending GPU operations on
    it. See [issue 42242084](https://issues.chromium.org/issues/42242084).'
  heading_path:
  - What's New in WebGPU (Chrome 126)
  - Buffer upload optimization for Vulkan backend
  links:
  - url: https://developer.mozilla.org/docs/Web/API/GPUQueue/writeBuffer
    link_type: mdn
    title: writeBuffer()
  - url: https://issues.chromium.org/issues/42242084
    link_type: other
    title: issue 42242084
  line_number: 161
  primary_tags:
  - name: webgpu
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - webgpu
- title: Shader compilation time improvements
  content: 'The Chrome team is enhancing the efficiency of [Tint](https://dawn.googlesource.com/tint), the compiler of WebGPU
    shader language. Tint currently modifies the shader code''s abstract syntax tree (AST) multiple times before generating
    machine code, a process that has been resource-intensive on some platforms. To optimize this, a new intermediate representation
    (IR) is being introduced, along with redesigned backends that use it. This change aims to accelerate shader compilation.


    ![Render pipeline creation involves converting WGSL to SPIR-V with the Tint compiler, then to ISA with the Driver compiler.](/static/blog/new-in-webgpu-126/image/render-pipeline-creation-diagram.jpg)
    Render pipeline creation in ChromeOS.


    These improvements, already accessible on Android, are being progressively expanded to ChromeOS devices that support WebGPU
    with the Vulkan backend. See [issue 42250751](https://issues.chromium.org/issues/42250751).'
  heading_path:
  - What's New in WebGPU (Chrome 126)
  - Shader compilation time improvements
  links:
  - url: https://dawn.googlesource.com/tint
    link_type: other
    title: Tint
  - url: https://issues.chromium.org/issues/42250751
    link_type: other
    title: issue 42250751
  line_number: 167
  primary_tags:
  - name: webgpu
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - webgpu
- title: Submitted command buffers must be unique
  content: "Each GPUCommandBuffer submitted to the GPUQueue with the [`submit()`](https://developer.mozilla.org/docs/Web/API/GPUQueue/submit)\
    \ method must be unique, otherwise a validation error is generated. This was a [specification bug](https://github.com/gpuweb/gpuweb/issues/4367).\
    \ See [issue 42241492](https://issues.chromium.org/issues/42241492).\n    \n    \n    const adapter = await navigator.gpu.requestAdapter();\n\
    \    const device = await adapter.requestDevice();\n    \n    const commandEncoder = device.createCommandEncoder();\n\
    \    const commandBuffer = commandEncoder.finish();\n    \n    device.queue.submit([commandBuffer, commandBuffer]);\n\
    \    // ⚠️ Validation fails because command buffers are not unique."
  heading_path:
  - What's New in WebGPU (Chrome 126)
  - Submitted command buffers must be unique
  links:
  - url: https://developer.mozilla.org/docs/Web/API/GPUQueue/submit
    link_type: mdn
    title: '`submit()`'
  - url: https://github.com/gpuweb/gpuweb/issues/4367
    link_type: github
    title: specification bug
  - url: https://issues.chromium.org/issues/42241492
    link_type: other
    title: issue 42241492
  line_number: 175
  primary_tags:
  - name: webgpu
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - webgpu
- title: Dawn updates
  content: 'The C++ wrapper [webgpu_cpp.h](https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/include/webgpu/webgpu_cpp.h)
    is now header-only, simplifying its use and enabling easier integration with alternative C++ wrappers. See [issue 40195122](https://issues.chromium.org/issues/40195122).


    The [webgpu.h](https://github.com/webgpu-native/webgpu-headers/blob/main/webgpu.h) C API no longer exposes the notion
    of Swapchain objects. This change is to closely align with the JavaScript API. The internal configuration is now done
    through the `Configure()` method of the new `wgpu::Surface` object, which is subject to future modifications. Check out
    an example in the [Build an app with WebGPU](/docs/web-platform/webgpu/build-app#draw_a_triangle) documentation. See [issue
    42241264](https://issues.chromium.org/issues/42241264).


    Check out the exhaustive [list of commits](https://dawn.googlesource.com/dawn/+log/chromium/6422..chromium/6478?n=1000).'
  heading_path:
  - What's New in WebGPU (Chrome 126)
  - Dawn updates
  links:
  - url: https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/include/webgpu/webgpu_cpp.h
    link_type: other
    title: webgpu_cpp.h
  - url: https://issues.chromium.org/issues/40195122
    link_type: other
    title: issue 40195122
  - url: https://github.com/webgpu-native/webgpu-headers/blob/main/webgpu.h
    link_type: github
    title: webgpu.h
  - url: https://issues.chromium.org/issues/42241264
    link_type: other
    title: issue 42241264
  - url: https://dawn.googlesource.com/dawn/+log/chromium/6422..chromium/6478?n=1000
    link_type: other
    title: list of commits
  line_number: 190
  primary_tags:
  - name: webgpu
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - webgpu
- title: FedCM as a trust signal for the Storage Access API
  content: 'Reconciles the FedCM and Storage Access APIs by making a prior FedCM grant a valid reason to automatically approve
    a storage access request.


    When a user grants permission for using their identity with a third-party Identity Provider (IdP) on a Relying Party (RP),
    many IdPs require third-party cookies to function correctly and securely. This proposal aims to satisfy that requirement
    in a private and secure manner by updating the Storage Access API (SAA) permission checks to not only accept the permission
    grant that is given by a storage access prompt, but also the permission grant that is given by a FedCM prompt.


    A key property of this mechanism is limiting the grant to cases explicitly allowed by the RP through the FedCM permissions
    policy, enforcing a per-frame control for the RP and preventing passive surveillance by the IdP beyond the capabilities
    that FedCM already grants.


    [Origin Trial](/origintrials#/view_trial/4008766618313162753) | [Explainer](https://github.com/explainers-by-googlers/storage-access-for-fedcm)
    | [ChromeStatus.com entry](https://chromestatus.com/feature/5116478702747648)'
  heading_path:
  - What's New in WebGPU (Chrome 126)
  - New origin trials
  - FedCM as a trust signal for the Storage Access API
  links:
  - url: https://github.com/explainers-by-googlers/storage-access-for-fedcm
    link_type: github
    title: Explainer
  - url: https://chromestatus.com/feature/5116478702747648
    link_type: chromestatus
    title: ChromeStatus.com entry
  line_number: 200
  primary_tags:
  - name: webgpu
    priority: secondary
    source: heading
    confidence: 1.0
  - name: storage
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - security
  - privacy
  - enterprise
- title: Media previews opt-out
  content: 'This reverse origin trial excludes sites from the launch of Media Previews.


    Chrome will provide real-time previews of camera and microphone input at the time camera and microphone permissions are
    requested by websites. These will also be available from the site''s pageinfo.


    In addition, users with multiple devices will be able to select a camera and microphone at the time permissions are requested,
    unless the site has requested a specific device through `getUserMedia()`.


    [Origin Trial](/origintrials#/register_trial/3270176279424401409) | [Tracking bug #330762482](https://issues.chromium.org/issues/330762482)
    | [ChromeStatus.com entry](https://chromestatus.com/feature/5100528783851520)'
  heading_path:
  - What's New in WebGPU (Chrome 126)
  - New origin trials
  - Media previews opt-out
  links:
  - url: https://issues.chromium.org/issues/330762482
    link_type: other
    title: 'Tracking bug #330762482'
  - url: https://chromestatus.com/feature/5100528783851520
    link_type: chromestatus
    title: ChromeStatus.com entry
  line_number: 210
  primary_tags:
  - name: webgpu
    priority: secondary
    source: heading
    confidence: 1.0
  - name: multimedia
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - privacy
- title: 'FedCM: Continuation API, Parameters API, Fields API, Multiple configURLs, Custom Account Labels'
  content: 'Developers can start taking part in an origin trial for a bundle of desktop FedCM features that can include authorization.
    The bundle consists of FedCM Continuation API, Parameter API, Fields API, Multiple configURLs, and Custom Account Labels.
    This enables an OAuth authorization flow-like experience involving an IdP-provided permission dialog.


    [Tracking bug #40262526](https://issues.chromium.org/issues/40262526) | [ChromeStatus.com entry](https://chromestatus.com/feature/6495400321351680)'
  heading_path:
  - What's New in WebGPU (Chrome 126)
  - New origin trials
  - 'FedCM: Continuation API, Parameters API, Fields API, Multiple configURLs, Custom Account Labels'
  links:
  - url: https://issues.chromium.org/issues/40262526
    link_type: other
    title: 'Tracking bug #40262526'
  - url: https://chromestatus.com/feature/6495400321351680
    link_type: chromestatus
    title: ChromeStatus.com entry
  line_number: 220
  primary_tags:
  - name: webgpu
    priority: secondary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - security
  - privacy
- title: Page-Embedded Permission Control
  content: 'Provide a new HTML element that interacts with the permission flow.


    The permission prompt is currently triggered directly from JavaScript without the user agent having any strong signal
    of the user''s intent. Having an in-content element that the user uses to trigger the permission flow allows for improved
    permission prompt UX for users as well as a recovery path from the "denied" permission state for sites.


    [ChromeStatus.com entry](https://chromestatus.com/feature/5125006551416832)'
  heading_path:
  - What's New in WebGPU (Chrome 126)
  - New origin trials
  - Page-Embedded Permission Control
  links:
  - url: https://chromestatus.com/feature/5125006551416832
    link_type: chromestatus
    title: ChromeStatus.com entry
  line_number: 226
  primary_tags:
  - name: webgpu
    priority: secondary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - security
- title: Dreprecate and remove import assertion 'assert' syntax
  content: 'Deprecate and remove the `assert` keyword in favor of the new `with` keyword in import attribute syntax.


    That is, `import m from ''foo'' assert { type: ''json'' }` will now throw a SyntaxError, and developers must change to
    `import m from ''foo'' with { type: ''json'' }`.


    [ChromeStatus.com entry](https://chromestatus.com/feature/4689167795879936) | [Spec](https://tc39.es/proposal-import-attributes)'
  heading_path:
  - What's New in WebGPU (Chrome 126)
  - Deprecations and removals
  - Dreprecate and remove import assertion 'assert' syntax
  links:
  - url: https://chromestatus.com/feature/4689167795879936
    link_type: chromestatus
    title: ChromeStatus.com entry
  - url: https://tc39.es/proposal-import-attributes
    link_type: other
    title: Spec
  line_number: 236
  primary_tags:
  - name: webgpu
    priority: secondary
    source: heading
    confidence: 1.0
  - name: deprecation
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns: []
