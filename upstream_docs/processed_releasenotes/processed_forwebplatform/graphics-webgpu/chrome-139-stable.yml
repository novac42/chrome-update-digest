version: '139'
channel: stable
area: graphics-webgpu
extraction_timestamp: '2025-08-17T21:56:08.180198'
extraction_method: deterministic
statistics:
  total_features: 3
  total_links: 7
  primary_tags:
    webgpu: 3
  cross_cutting:
    webgpu: 3
features:
- title: 3D texture support for BC and ASTC compressed formats
  content: "The `\"texture-compression-bc-sliced-3d\"` and `\"texture-compression-astc-sliced-3d\"` WebGPU features add support\
    \ for 3D textures using Block Compression (BC) and Adaptive Scalable Texture Compression (ASTC) formats. This lets you\
    \ take advantage of the efficient compression capabilities of BC and ASTC formats for volumetric texture data, offering\
    \ significant reductions in memory footprint and bandwidth requirements without substantial loss in visual quality. This\
    \ is particularly valuable in fields such as scientific visualization, medical imaging, and advanced rendering techniques.\n\
    \nThe following code snippet checks whether the adapter supports 3D textures with BC and ASTC compressed formats and requests\
    \ a device with these features if they are available.\n    \n    \n    const adapter = await navigator.gpu.requestAdapter();\n\
    \    \n    const requiredFeatures = [];\n    if (adapter?.features.has(\"texture-compression-bc-sliced-3d\")) {\n    \
    \  requiredFeatures.push(\n        \"texture-compression-bc\",\n        \"texture-compression-bc-sliced-3d\",\n      );\n\
    \    }\n    if (adapter?.features.has(\"texture-compression-astc-sliced-3d\")) {\n      requiredFeatures.push(\n     \
    \   \"texture-compression-astc\",\n        \"texture-compression-astc-sliced-3d\",\n      );\n    }\n    const device\
    \ = await adapter?.requestDevice({ requiredFeatures });\n    \n    // Later on...\n    if (device.features.has(\"texture-compression-astc-sliced-3d\"\
    )) {\n      // Create a 3D texture using ASTC compression\n    } else if (device.features.has(\"texture-compression-bc-sliced-3d\"\
    )) {\n      // Create a 3D texture using BC compression\n    } else {\n      // Fallback: Create an uncompressed 3D texture\n\
    \    }\n    \n\nExplore 3D brain scans by checking out the [Volume Rendering - Texture 3D WebGPU sample](https://webgpu.github.io/webgpu-samples/?sample=volumeRenderingTexture3D)\
    \ and see the [chromestatus entry](https://chromestatus.com/feature/5080855386783744).\n\n![3D brain scans rendered using\
    \ WebGPU.](/static/blog/new-in-webgpu-139/image/brain-scans.png) A brain scan image from a 3D texture with ASTC compressed\
    \ format."
  heading_path:
  - Chrome 139
  - Graphics
  - 3D texture support for BC and ASTC compressed formats
  links:
  - url: https://webgpu.github.io/webgpu-samples/?sample=volumeRenderingTexture3D
    link_type: github
    title: Volume Rendering - Texture 3D WebGPU sample
  - url: https://chromestatus.com/feature/5080855386783744
    link_type: chromestatus
    title: chromestatus entry
  line_number: 125
  primary_tags:
  - name: webgpu
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - webgpu
- title: New "core-features-and-limits" feature
  content: 'A new `"core-features-and-limits"` feature is being introduced for the upcoming WebGPU compatibility mode. This
    feature indicates that the adapter or device supports core features and limits of the WebGPU spec. "core" WebGPU is the
    only version available at the moment, so all WebGPU implementations must include `"core-features-and-limits"` in their
    supported features.


    In the future, when WebGPU compatibility mode ships, an adapter or a device may not have this feature to signify it is
    a compatibility mode adapter or device and not a core one. When enabled on a device, this lifts all compatibility mode
    restrictions (features and limits).


    For a detailed explanation and usage in WebGPU compatibility mode, refer to the [explainer](https://gist.github.com/greggman/0dea9995e33393c546a4c2bd2a12e50e)
    and the following section. See [issue 418025721](https://issues.chromium.org/issues/418025721).'
  heading_path:
  - Chrome 139
  - Graphics
  - New "core-features-and-limits" feature
  links:
  - url: https://gist.github.com/greggman/0dea9995e33393c546a4c2bd2a12e50e
    link_type: github
    title: explainer
  - url: https://issues.chromium.org/issues/418025721
    link_type: other
    title: issue 418025721
  line_number: 163
  primary_tags:
  - name: webgpu
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - webgpu
- title: Dawn updates
  content: 'A `message` argument is added to the `WGPUQueueWorkDoneCallback` function to be more consistent with other callback
    functions that take a status as well. See [webgpu-headers PR](https://github.com/webgpu-native/webgpu-headers/pull/528).


    When emdawnwebgpu is linked with `-sSHARED_MEMORY`, its webgpu.cpp file is also compiled with this flag. See [Dawn CL
    244075](https://dawn-review.googlesource.com/c/dawn/+/244075).


    This covers only some of the key highlights. Check out the exhaustive [list of commits](https://dawn.googlesource.com/dawn/+log/chromium/7204..chromium/7258?n=1000).'
  heading_path:
  - Chrome 139
  - Graphics
  - Dawn updates
  links:
  - url: https://github.com/webgpu-native/webgpu-headers/pull/528
    link_type: github
    title: webgpu-headers PR
  - url: https://dawn-review.googlesource.com/c/dawn/+/244075
    link_type: other
    title: Dawn CL 244075
  - url: https://dawn.googlesource.com/dawn/+log/chromium/7204..chromium/7258?n=1000
    link_type: other
    title: list of commits
  line_number: 171
  primary_tags:
  - name: webgpu
    priority: primary
    source: heading
    confidence: 1.0
  cross_cutting_concerns:
  - webgpu
